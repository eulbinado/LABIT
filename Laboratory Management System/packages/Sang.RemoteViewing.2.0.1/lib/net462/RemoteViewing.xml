<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RemoteViewing</name>
    </assembly>
    <members>
        <member name="T:RemoteViewing.Hosting.ServiceCollectionExtensions">
            <summary>
            Extension methods for setting up VNC services in an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
        </member>
        <member name="M:RemoteViewing.Hosting.ServiceCollectionExtensions.AddVncServer(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds a VNC server to the service collection.
            </summary>
            <param name="services">
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to add the VNC server to.
            </param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> so that additional calls can be chained.
            </returns>
        </member>
        <member name="M:RemoteViewing.Hosting.ServiceCollectionExtensions.AddVncServer``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds a VNC server to the service collection.
            </summary>
            <typeparam name="T">
            The type of a class implementing a VNC server.
            </typeparam>
            <param name="services">
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to add the VNC server to.
            </param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> so that additional calls can be chained.
            </returns>
        </member>
        <member name="M:RemoteViewing.Hosting.ServiceCollectionExtensions.AddVncServer``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,RemoteViewing.Hosting.VncServerOptions)">
            <summary>
            Adds a VNC server to the service collection.
            </summary>
            <typeparam name="T">
            The type of a class implementing a VNC server.
            </typeparam>
            <param name="services">
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to add the VNC server to.
            </param>
            <param name="options">
            Options which control how the <see cref="T:RemoteViewing.Vnc.Server.VncServer"/> is created.
            </param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> so that additional calls can be chained.
            </returns>
        </member>
        <member name="T:RemoteViewing.Hosting.VncServerOptions">
            <summary>
            Options that control how a VNC Server is created.
            </summary>
        </member>
        <member name="P:RemoteViewing.Hosting.VncServerOptions.Password">
            <summary>
            Gets or sets the password used to authenticate the user (if any).
            </summary>
        </member>
        <member name="P:RemoteViewing.Hosting.VncServerOptions.Address">
            <summary>
            Gets or sets the address at which the VNC server should listen.
            </summary>
        </member>
        <member name="P:RemoteViewing.Hosting.VncServerOptions.Port">
            <summary>
            Gets or sets the port at which the VNC server should listen.
            </summary>
        </member>
        <member name="P:RemoteViewing.Hosting.VncServerOptions.Reverse">
            <summary>
            Gets or sets a value indicating whether to initiate a reverse VNC connection.
            </summary>
        </member>
        <member name="T:RemoteViewing.Hosting.VncServerWorker">
            <summary>
            A <see cref="T:Microsoft.Extensions.Hosting.IHostedService"/> which starts a VNC server.
            </summary>
        </member>
        <member name="M:RemoteViewing.Hosting.VncServerWorker.#ctor(RemoteViewing.Vnc.Server.IVncServer,RemoteViewing.Hosting.VncServerOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Hosting.VncServerWorker"/> class.
            </summary>
            <param name="server">
            The <see cref="T:RemoteViewing.Vnc.Server.IVncServer"/> around which the <see cref="T:RemoteViewing.Hosting.VncServerWorker"/> wraps.
            </param>
            <param name="options">
            Options which control how the service should be started.
            </param>
        </member>
        <member name="M:RemoteViewing.Hosting.VncServerWorker.StartAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:RemoteViewing.Hosting.VncServerWorker.StopAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:RemoteViewing.Utility.AutoClear">
            <summary>
            Wraps around a <see cref="T:System.Array"/> and clears the array if this
            <see cref="T:RemoteViewing.Utility.AutoClear"/> object is disposed.
            </summary>
        </member>
        <member name="M:RemoteViewing.Utility.AutoClear.#ctor(System.Array)">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Utility.AutoClear"/> struct.
            </summary>
            <param name="array">
            The <see cref="T:System.Array"/> which should be cleared when this <see cref="T:RemoteViewing.Utility.AutoClear"/>
            object is disposed of.
            </param>
        </member>
        <member name="M:RemoteViewing.Utility.AutoClear.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:RemoteViewing.Utility.PeriodicThread">
            <summary>
            Represents a <seealso cref="T:System.Threading.Thread"/> that invokes a specific action at a
            specific interval.
            </summary>
        </member>
        <member name="M:RemoteViewing.Utility.PeriodicThread.Start(System.Action,System.Func{System.Double},System.Boolean)">
            <summary>
            Invokes the <paramref name="action"/> at a frequency specified by <paramref name="getUpdateRateFunc"/>;
            optionally waiting for a signal to execute the action.
            </summary>
            <param name="action">
            The action to run at the frequency specifie.
            </param>
            <param name="getUpdateRateFunc">
            A function that returns at which frequency (in Hz) the <paramref name="action"/> should
            be performed.
            </param>
            <param name="useSignal">
            <see langword="true"/> to wait for <see cref="M:RemoteViewing.Utility.PeriodicThread.Signal"/> before executing the action;
            otherwise, <see langword="false"/>.
            </param>
        </member>
        <member name="M:RemoteViewing.Utility.PeriodicThread.Signal">
            <summary>
            Signals the <see cref="T:RemoteViewing.Utility.PeriodicThread"/> that an action should be performed.
            </summary>
        </member>
        <member name="M:RemoteViewing.Utility.PeriodicThread.Stop">
            <summary>
            Stops this <see cref="T:RemoteViewing.Utility.PeriodicThread"/>.
            </summary>
        </member>
        <member name="T:RemoteViewing.Utility.User32">
            <summary>
            Class that holds functions from user32.dll.
            </summary>
        </member>
        <member name="M:RemoteViewing.Utility.User32.MouseEvent(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Function that can be used to simulate a mouse.
            </summary>
            <param name="dwFlags">Flags.</param>
            <param name="dx">X-coordinate.</param>
            <param name="dy">Y-coordinate.</param>
            <param name="dwData">Data.</param>
            <param name="dwExtraInfo">Extra info for X buttons.</param>
        </member>
        <member name="M:RemoteViewing.Utility.User32.SetCursorPos(System.Int32,System.Int32)">
            <summary>
            Function that sets the position of the pointer.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
            <returns>Success code.</returns>
        </member>
        <member name="T:RemoteViewing.VMware.AviIndexChunck">
            <summary>
            Contains an AVI 2.0 standard index.
            </summary>
            <seealso href="https://msdn.microsoft.com/en-us/library/windows/desktop/ff625869(v=vs.85).aspx"/>
        </member>
        <member name="F:RemoteViewing.VMware.AviIndexChunck.FourCC">
            <summary>
            A <see cref="F:RemoteViewing.VMware.AviIndexChunck.FourCC"/> code. The value is either <see cref="F:RemoteViewing.VMware.FourCC.Indx"/> or <c>nnix</c>,
            where nn is the stream number.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviIndexChunck.Size">
            <summary>
            The size of the structure, not including the initial 8 bytes.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviIndexChunck.LongsPerEntry">
            <summary>
            The size of each index entry, in 4-byte units. The value must be 2.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviIndexChunck.IndexSubType">
            <summary>
            The index subtype. The value must be <see cref="F:RemoteViewing.VMware.IndexSubType.None"/>.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviIndexChunck.IndexType">
            <summary>
            The index type. The value must be <see cref="F:RemoteViewing.VMware.IndexType.IndexOfChunks"/>.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviIndexChunck.EntriesInUse">
            <summary>
            The number of valid entries in the adwIndex array.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviIndexChunck.ChunkId">
            <summary>
            Specifies a <see cref="F:RemoteViewing.VMware.AviIndexChunck.FourCC"/> that identifies a stream in the AVI file.
            The FOURCC must have the form 'xxyy' where xx is the stream number and yy is a two-character
            code that identifies the contents of the stream.
            </summary>
        </member>
        <member name="T:RemoteViewing.VMware.AviMainHeader">
            <summary>
            The AVIMAINHEADER structure defines global information in an AVI file.
            </summary>
            <seealso href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd318180(v=vs.85).aspx"/>
        </member>
        <member name="F:RemoteViewing.VMware.AviMainHeader.MicroSecPerFrame">
            <summary>
            Specifies the number of microseconds between frames. This value indicates the overall timing for the file.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviMainHeader.MaxBytesPerSec">
            <summary>
            Specifies the approximate maximum data rate of the file. This value indicates the number of bytes
            per second the system must handle to present an AVI sequence as specified by the other parameters
            contained in the main header and stream header chunks.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviMainHeader.PaddingGranularity">
            <summary>
            Specifies the alignment for data, in bytes. Pad the data to multiples of this value.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviMainHeader.Flags">
            <summary>
            Contains a bitwise combination of zero or more of the <see cref="T:RemoteViewing.VMware.MainHeaderFlags"/>.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviMainHeader.TotalFrames">
            <summary>
            Specifies the total number of frames of data in the file.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviMainHeader.InitialFrames">
            <summary>
            Specifies the initial frame for interleaved files. Noninterleaved files should specify zero.
            If you are creating interleaved files, specify the number of frames in the file prior to the initial
            frame of the AVI sequence in this member.
            To give the audio driver enough audio to work with, the audio data in an interleaved file must be skewed
            from the video data.Typically, the audio data should be moved forward enough frames to allow approximately
            0.75 seconds of audio data to be preloaded.The dwInitialRecords member should be set to the number of frames
            the audio is skewed.Also set the same value for the dwInitialFrames member of the AVISTREAMHEADER structure
            in the audio stream header.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviMainHeader.Streams">
            <summary>
            Specifies the number of streams in the file. For example, a file with audio and video has two streams.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviMainHeader.SuggestedBufferSize">
            <summary>
            Specifies the suggested buffer size for reading the file. Generally, this size should be large enough to
            contain the largest chunk in the file. If set to zero, or if it is too small, the playback software will
            have to reallocate memory during playback, which will reduce performance. For an interleaved file, the
            buffer size should be large enough to read an entire record, and not just a chunk.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviMainHeader.Width">
            <summary>
            Specifies the width of the AVI file in pixels.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviMainHeader.Height">
            <summary>
            Specifies the height of the AVI file in pixels.
            </summary>
        </member>
        <member name="T:RemoteViewing.VMware.AviStreamHeader">
            <summary>
            The <see cref="T:RemoteViewing.VMware.AviStreamHeader"/> structure contains information about one stream in an AVI file.
            </summary>
            <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd318183(v=vs.85).aspx"/>
        </member>
        <member name="F:RemoteViewing.VMware.AviStreamHeader.Type">
            <summary>
            Contains a <see cref="T:RemoteViewing.VMware.FourCC"/> that specifies the type of the data contained in the stream.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviStreamHeader.Handler">
            <summary>
            Optionally, contains a <see cref="T:RemoteViewing.VMware.FourCC"/> that identifies a specific data handler.
            The data handler is the preferred handler for the stream. For audio and video streams,
            this specifies the codec for decoding the stream.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviStreamHeader.Flags">
            <summary>
            Contains any flags for the data stream. The bits in the high-order word of these flags are
            specific to the type of data contained in the stream.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviStreamHeader.Priority">
            <summary>
            Specifies priority of a stream type. For example, in a file with multiple audio streams,
            the one with the highest priority might be the default stream.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviStreamHeader.Language">
            <summary>
            Language tag.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviStreamHeader.InitialFrames">
            <summary>
            Specifies how far audio data is skewed ahead of the video frames in interleaved files.
            Typically, this is about 0.75 seconds. If you are creating interleaved files, specify the
            number of frames in the file prior to the initial frame of the AVI sequence in this member.
            For more information, see the remarks for the dwInitialFrames member of the <see cref="T:RemoteViewing.VMware.AviMainHeader"/> structure.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviStreamHeader.Scale">
            <summary>
            Used with <see cref="F:RemoteViewing.VMware.AviStreamHeader.Rate"/> to specify the time scale that this stream will use.
            Dividing <see cref="F:RemoteViewing.VMware.AviStreamHeader.Rate"/> by <see cref="F:RemoteViewing.VMware.AviStreamHeader.Scale"/> gives the number of samples per second.
            For video streams, this is the frame rate. For audio streams, this rate corresponds to the
            time needed to play nBlockAlign bytes of audio, which for PCM audio is the just the sample rate.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviStreamHeader.Rate">
            <summary>
            See <see cref="F:RemoteViewing.VMware.AviStreamHeader.Scale"/>.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviStreamHeader.Start">
            <summary>
            Specifies the starting time for this stream. The units are defined by the <see cref="F:RemoteViewing.VMware.AviStreamHeader.Rate"/> and
            <see cref="F:RemoteViewing.VMware.AviStreamHeader.Scale"/> members in the main file header. Usually, this is zero, but it can specify a
            delay time for a stream that does not start concurrently with the file.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviStreamHeader.Length">
            <summary>
            Specifies the length of this stream. The units are defined by the <see cref="F:RemoteViewing.VMware.AviStreamHeader.Rate"/> and
            <see cref="F:RemoteViewing.VMware.AviStreamHeader.Scale"/> members of the stream's header.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviStreamHeader.SuggestedBufferSize">
            <summary>
            Specifies how large a buffer should be used to read this stream. Typically, this contains a
            value corresponding to the largest chunk present in the stream. Using the correct buffer size
            makes playback more efficient. Use zero if you do not know the correct buffer size.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviStreamHeader.Quality">
            <summary>
            Specifies an indicator of the quality of the data in the stream. Quality is represented as a number
            between 0 and 10,000. For compressed data, this typically represents the value of the quality
            parameter passed to the compression software. If set to –1, drivers use the default quality value.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviStreamHeader.SampleSize">
            <summary>
            Specifies the size of a single sample of data. This is set to zero if the samples can vary in size.
            If this number is nonzero, then multiple samples of data can be grouped into a single chunk within
            the file. If it is zero, each sample of data (such as a video frame) must be in a separate chunk.
            For video streams, this number is typically zero, although it can be nonzero if all video frames are
            the same size. For audio streams, this number should be the same as the nBlockAlign member of the
            WAVEFORMATEX structure describing the audio.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviStreamHeader.Left">
            <summary>
            Gets the upper-left corner for the video stream.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviStreamHeader.Top">
            <summary>
            Gets the upper-left corner for the video stream.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviStreamHeader.Right">
            <summary>
            Gets the lower-right corner of the video stream.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviStreamHeader.Bottom">
            <summary>
            Gets the lower-right corner of the video stream.
            </summary>
        </member>
        <member name="T:RemoteViewing.VMware.AviSuperIndexEntry">
            <summary>
            An entry in an AVI Super Index.
            </summary>
            <seealso href="https://msdn.microsoft.com/en-us/library/windows/desktop/ff625871(v=vs.85).aspx"/>
        </member>
        <member name="F:RemoteViewing.VMware.AviSuperIndexEntry.Offset">
            <summary>
            The offset, in bytes, from the start of the file to the sub-index that this entry points to.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviSuperIndexEntry.Size">
            <summary>
            The size of the sub-index, in bytes.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.AviSuperIndexEntry.Duration">
            <summary>
            The duration of the file that is covered by the sub-index, in stream ticks.
            </summary>
        </member>
        <member name="T:RemoteViewing.VMware.BitmapInfoHeader">
            <summary>
            The <see cref="T:RemoteViewing.VMware.BitmapInfoHeader"/> structure contains information about the dimensions and color forma
            t of a device-independent bitmap (DIB).
            </summary>
            <seealso href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd318229(v=vs.85).aspx"/>
        </member>
        <member name="F:RemoteViewing.VMware.BitmapInfoHeader.Size">
            <summary>
            Specifies the number of bytes required by the structure. This value does not include the size of
            the color table or the size of the color masks, if they are appended to the end of structure.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.BitmapInfoHeader.Width">
            <summary>
            Specifies the width of the bitmap, in pixels. For information about calculating the stride of
            the bitmap, see Remarks.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.BitmapInfoHeader.Height">
            <summary>
            Specifies the height of the bitmap, in pixels.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.BitmapInfoHeader.Planes">
            <summary>
            Specifies the number of planes for the target device. This value must be set to 1.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.BitmapInfoHeader.BitCount">
            <summary>
            Specifies the number of bits per pixel (bpp). For uncompressed formats, this value is the
            average number of bits per pixel. For compressed formats, this value is the implied bit
            depth of the uncompressed image, after the image has been decoded.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.BitmapInfoHeader.Compression">
            <summary>
            For compressed video and YUV formats, this member is a FOURCC code, specified as a DWORD in
            little-endian order.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.BitmapInfoHeader.SizeImage">
            <summary>
            Specifies the size, in bytes, of the image. This can be set to 0 for uncompressed RGB bitmaps.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.BitmapInfoHeader.XPelsPerMeter">
            <summary>
            Specifies the horizontal resolution, in pixels per meter, of the target device for the bitmap.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.BitmapInfoHeader.YPelsPerMeter">
            <summary>
            Specifies the vertical resolution, in pixels per meter, of the target device for the bitmap.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.BitmapInfoHeader.ClrUsed">
            <summary>
            Specifies the number of color indices in the color table that are actually used by the bitmap.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.BitmapInfoHeader.ClrImportant">
            <summary>
            Specifies the number of color indices that are considered important for displaying the bitmap.
            If this value is zero, all colors are important.
            </summary>
        </member>
        <member name="T:RemoteViewing.VMware.Chunk">
            <summary>
            A chunck in an AVI stream.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.Chunk.FourCC">
            <summary>
            The <see cref="F:RemoteViewing.VMware.Chunk.FourCC"/> code for the chunk.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.Chunk.Size">
            <summary>
            The size of the chunk.
            </summary>
        </member>
        <member name="T:RemoteViewing.VMware.DisplayModeChange">
            <summary>
            A request to update the display mode.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.DisplayModeChange.buffer">
            <summary>
            The underlying buffer.
            </summary>
        </member>
        <member name="P:RemoteViewing.VMware.DisplayModeChange.BitsPerSample">
            <summary>
            Gets or sets the number of bits used to store a pixel.
            </summary>
        </member>
        <member name="P:RemoteViewing.VMware.DisplayModeChange.Depth">
            <summary>
            Gets or sets the bit depth of a pixel.
            </summary>
        </member>
        <member name="P:RemoteViewing.VMware.DisplayModeChange.TrueColor">
            <summary>
            Gets or sets a value indicating whether the colors are true colors (or indexes into a palette).
            </summary>
        </member>
        <member name="P:RemoteViewing.VMware.DisplayModeChange.MaxRed">
            <summary>
            Gets or sets the maximum value for the color red.
            </summary>
        </member>
        <member name="P:RemoteViewing.VMware.DisplayModeChange.MaxGreen">
            <summary>
            Gets or sets the maximum value for the color green.
            </summary>
        </member>
        <member name="P:RemoteViewing.VMware.DisplayModeChange.MaxBlue">
            <summary>
            Gets or sets the maximum value for the color blue.
            </summary>
        </member>
        <member name="P:RemoteViewing.VMware.DisplayModeChange.RedShift">
            <summary>
            Gets or sets the number of bits left the color red is shifted.
            </summary>
        </member>
        <member name="P:RemoteViewing.VMware.DisplayModeChange.GreenShift">
            <summary>
            Gets or sets the number of bits left the color green is shifted.
            </summary>
        </member>
        <member name="P:RemoteViewing.VMware.DisplayModeChange.BlueShift">
            <summary>
            Gets or sets the number of bits left the color blue is shifted.
            </summary>
        </member>
        <member name="P:RemoteViewing.VMware.DisplayModeChange.Buffer">
            <summary>
            Gets the underlying buffer.
            </summary>
        </member>
        <member name="T:RemoteViewing.VMware.FourCC">
            <summary>
            Well-known FourCC codes.
            </summary>
            <seealso href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd375802(v=vs.85).aspx"/>
            <seealso href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd318189(v=vs.85).aspx"/>
        </member>
        <member name="F:RemoteViewing.VMware.FourCC.Riff">
            <summary>
            The RIFF header.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.FourCC.Hdrl">
            <summary>
            The 'hdrl' list defines the format of the data and is the first required LIST chunk.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.FourCC.Avi">
            <summary>
            AVI files are identified by the FOURCC 'AVI ' in the RIFF header.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.FourCC.Avih">
            <summary>
            The 'hdrl' list begins with the main AVI header, which is contained in an 'avih' chunk.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.FourCC.Strl">
            <summary>
            One or more 'strl' lists follow the main header. A 'strl' list is required for each data stream.
            Each 'strl' list contains information about one stream in the file.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.FourCC.Strh">
            <summary>
            A stream header chunk ('strh')
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.FourCC.Strf">
            <summary>
            A stream format chunk ('strf')
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.FourCC.Strn">
            <summary>
            A stream name chunk ('strn').
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.FourCC.Vids">
            <summary>
            A video stream.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.FourCC.Indx">
            <summary>
            The OpenDML Index
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.FourCC.List">
            <summary>
            An AVI list.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.FourCC.Odml">
            <summary>
            The OpenDML list.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.FourCC.Dmlh">
            <summary>
            The OpenDML header
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.FourCC.Junk">
            <summary>
            Data can be aligned in an AVI file by inserting 'JUNK' chunks as needed. Applications should ignore the contents of a 'JUNK' chunk.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.FourCC.Movi">
            <summary>
            The 'movi' list contains the data for the AVI sequence.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.FourCC.Dc">
            <summary>
            Compressed video frame.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.FourCC.Dc00">
            <summary>
            First compressed video frame.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.FourCC.Ix">
            <summary>
            Standard index block.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.FourCC.VMnc">
            <summary>
            The VMware codec.
            </summary>
        </member>
        <member name="T:RemoteViewing.VMware.IndexSubType">
            <summary>
            Specifies subtypes for an AVI 2.0-standard index.
            </summary>
            <seealso href="https://msdn.microsoft.com/en-us/library/windows/desktop/ff625869(v=vs.85).aspx"/>
        </member>
        <member name="F:RemoteViewing.VMware.IndexSubType.None">
            <summary>
            No subtype is specified.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.IndexSubType.AviIndexToField">
            <summary>
            Fiels within frames are also indexed.
            </summary>
        </member>
        <member name="T:RemoteViewing.VMware.IndexType">
            <summary>
            Specifies types for an AVI 2.0-standard index.
            </summary>
            <seealso href="https://msdn.microsoft.com/en-us/library/windows/desktop/ff625869(v=vs.85).aspx"/>
        </member>
        <member name="F:RemoteViewing.VMware.IndexType.IndexOfIndexes">
            <summary>
            The index in an index of indexes.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.IndexType.IndexOfChunks">
            <summary>
            The index is an index of chunks.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.IndexType.IndexIsData">
            <summary>
            The index contains data.
            </summary>
        </member>
        <member name="T:RemoteViewing.VMware.List">
            <summary>
            A list in an AVI file.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.List.ListType">
            <summary>
            The <see cref="F:RemoteViewing.VMware.List.FourCC"/> code for the list.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.List.Size">
            <summary>
            The size of the list.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.List.FourCC">
            <summary>
            The <see cref="F:RemoteViewing.VMware.List.FourCC"/> code of the list entries.
            </summary>
        </member>
        <member name="T:RemoteViewing.VMware.MainHeaderFlags">
            <summary>
            Flags for the <see cref="T:RemoteViewing.VMware.AviMainHeader"/> struct.
            </summary>
            <seealso href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd318180(v=vs.85).aspx"/>
        </member>
        <member name="F:RemoteViewing.VMware.MainHeaderFlags.HasIndex">
            <summary>
            Indicates the AVI file has an index.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.MainHeaderFlags.MustUseIndex">
            <summary>
            Indicates that application should use the index, rather than the physical ordering of
            the chunks in the file, to determine the order of presentation of the data. For example,
            this flag could be used to create a list of frames for editing.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.MainHeaderFlags.IsInterleaved">
            <summary>
            Indicates the AVI file is interleaved.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.MainHeaderFlags.TrustChunkType">
            <summary>
            Use Chunk Type to find key frames
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.MainHeaderFlags.WasCaptureFile">
            <summary>
            Indicates the AVI file is a specially allocated file used for capturing real-time video. Applications
            should warn the user before writing over a file with this flag set because the user probably
            defragmented this file.
            </summary>
        </member>
        <member name="F:RemoteViewing.VMware.MainHeaderFlags.Copyrighted">
            <summary>
            Indicates the AVI file contains copyrighted data and software. When this flag is used, software should
            not permit the data to be duplicated.
            </summary>
        </member>
        <member name="T:RemoteViewing.VMware.StreamExtensions">
            <summary>
            Provides extensions to the <see cref="T:System.IO.Stream"/> class.
            </summary>
        </member>
        <member name="M:RemoteViewing.VMware.StreamExtensions.WriteStructAsync``1(System.IO.Stream,``0,System.Threading.CancellationToken)">
            <summary>
            Serializes a struct and writes it to a <see cref="T:System.IO.Stream"/>.
            </summary>
            <typeparam name="T">
            The type of struct to serialize.
            </typeparam>
            <param name="stream">
            The <see cref="T:System.IO.Stream"/> to which to write the struct.
            </param>
            <param name="value">
            The value of the struct.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> which can be used to cancel the asynchronous operation.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> which represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:RemoteViewing.VMware.StreamExtensions.GrowAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Grows the size of a <see cref="T:System.IO.Stream"/> by writing zeros.
            </summary>
            <param name="stream">
            The <see cref="T:System.IO.Stream"/> to grow.
            </param>
            <param name="count">
            The number of zero bytes to write.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> which can be used to cancel the asynchronous operation.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> which represents the asynchronous operation.
            </returns>
        </member>
        <member name="T:RemoteViewing.VMware.VncAviWriter">
            <summary>
            The <see cref="T:RemoteViewing.VMware.VncAviWriter"/> stores a RFB session into an AVI file.
            </summary>
            <seealso href="https://cdn.hackaday.io/files/274271173436768/avi.pdf"/>
            <seealso href="http://www.jmcgowan.com/odmlff2.pdf"/>
        </member>
        <member name="M:RemoteViewing.VMware.VncAviWriter.#ctor(RemoteViewing.Vnc.IVncFramebufferSource)">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.VMware.VncAviWriter"/> class.
            </summary>
            <param name="framebufferSource">
            The <see cref="T:RemoteViewing.Vnc.IVncFramebufferSource"/> which provides framebuffers which act as input for the
            session.
            </param>
        </member>
        <member name="P:RemoteViewing.VMware.VncAviWriter.MicrosecondsPerFrame">
            <summary>
            Gets the amount of time, in microseconds, each frame is displayed.
            </summary>
        </member>
        <member name="P:RemoteViewing.VMware.VncAviWriter.ExpectedSize">
            <summary>
            Gets or sets the expected size of the AVI file. Set to the maximum value by default,
            useful when streaming to FFmpeg.
            </summary>
        </member>
        <member name="P:RemoteViewing.VMware.VncAviWriter.ExpectedTotalFrames">
            <summary>
            Gets or sets the expected number of frames in the AVI file. Set to the maximum value by default,
            useful when streaming to FFmpeg.
            </summary>
        </member>
        <member name="P:RemoteViewing.VMware.VncAviWriter.Rate">
            <summary>
            Gets or sets the rate, in frames per second, of the video stream. The rate
            is divided by <see cref="P:RemoteViewing.VMware.VncAviWriter.Scale"/>.
            </summary>
        </member>
        <member name="P:RemoteViewing.VMware.VncAviWriter.Scale">
            <summary>
            Gets or sets the scale to use for <see cref="P:RemoteViewing.VMware.VncAviWriter.Rate"/>.
            </summary>
        </member>
        <member name="M:RemoteViewing.VMware.VncAviWriter.WriteAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes framebuffer packages to a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">
            The <see cref="T:System.IO.Stream"/> to which to write.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> which can be used to cancel the asynchronous operation. This method
            will keep recording until cancellation is requested.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> which represents the asynchronous operation.
            </returns>
        </member>
        <member name="T:RemoteViewing.Vnc.AuthenticationMethod">
            <summary>
            Supported authentication methods.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.AuthenticationMethod.None">
            <summary>
            No authentication is performed.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.AuthenticationMethod.Password">
            <summary>
            A password is used.
            </summary>
        </member>
        <member name="T:RemoteViewing.Vnc.ExtendedDesktopSizeReason">
            <summary>
            Indicates the reason for a change in screen layout.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.ExtendedDesktopSizeReason.External">
            <summary>
            The screen layout was changed via non-RFB means on the server. For example the server may have provided means for server-side
            applications to manipulate the screen layout. This code is also used when the client sends a non-incremental FrameBufferUpdateRequest
            to learn the server's current state.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.ExtendedDesktopSizeReason.Client">
            <summary>
            The client receiving this message requested a change of the screen layout. The change may or may not have happened depending on server
            policy or available resources. The status code in the y-position field must be used to determine which.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.ExtendedDesktopSizeReason.OtherClient">
            <summary>
            Another client requested a change of the screen layout and the server approved it. A rectangle with this code is never sent if
            the server denied the request.
            </summary>
        </member>
        <member name="T:RemoteViewing.Vnc.ExtendedDesktopSizeStatus">
            <summary>
            Indicates the status code for a change requested by a client.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.ExtendedDesktopSizeStatus.Success">
            <summary>
            No error
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.ExtendedDesktopSizeStatus.Prohibited">
            <summary>
            Resize is administratively prohibited
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.ExtendedDesktopSizeStatus.OutOfResources">
            <summary>
            Out of resources
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.ExtendedDesktopSizeStatus.InvalidScreenLayout">
            <summary>
            Invalid screen layout
            </summary>
        </member>
        <member name="T:RemoteViewing.Vnc.FramebufferChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:RemoteViewing.Vnc.VncClient.FramebufferChanged"/> event.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.FramebufferChangedEventArgs.#ctor(System.Collections.Generic.IEnumerable{RemoteViewing.Vnc.VncRectangle})">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.FramebufferChangedEventArgs"/> class.
            </summary>
            <param name="rectangles">The bounding rectangles of the changed regions.</param>
        </member>
        <member name="P:RemoteViewing.Vnc.FramebufferChangedEventArgs.RectangleCount">
            <summary>
            Gets the number of changed regions.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.FramebufferChangedEventArgs.GetRectangle(System.Int32)">
            <summary>
            Gets one of the changed regions.
            </summary>
            <param name="index">The index of the changed region. The first region has an index of 0.</param>
            <returns>A rectangle describing the changed region.</returns>
        </member>
        <member name="T:RemoteViewing.Vnc.IVncFramebufferSource">
            <summary>
            Provides a framebuffer.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.IVncFramebufferSource.SupportsResizing">
            <summary>
            Gets a value indicating whether the <see cref="T:RemoteViewing.Vnc.IVncFramebufferSource"/> supports resizing.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.IVncFramebufferSource.Capture">
            <summary>
            Called when a framebuffer update is needed.
            You can use this opportunity to switch framebuffers if desired.
            </summary>
            <returns>A framebuffer.</returns>
        </member>
        <member name="M:RemoteViewing.Vnc.IVncFramebufferSource.SetDesktopSize(System.Int32,System.Int32)">
            <summary>
            Handles a client request to resize the framebuffer.
            </summary>
            <param name="width">
            The width requested by the client.
            </param>
            <param name="height">
            The height requested by the client.
            </param>
            <returns>
            A <see cref="T:RemoteViewing.Vnc.ExtendedDesktopSizeStatus"/> value indicating how the <see cref="T:RemoteViewing.Vnc.IVncFramebufferSource"/> handled
            the update request.
            </returns>
        </member>
        <member name="T:RemoteViewing.Vnc.IVncPasswordChallenge">
            <summary>
            A common interface for classes which implement the VNC password challenge protocol.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.IVncPasswordChallenge.GenerateChallenge">
            <summary>
            Generates a 16-byte challenge.
            </summary>
            <returns>
            A <see cref="T:System.Byte"/> array which contains the 16-byte challenge.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.IVncPasswordChallenge.GetChallengeResponse(System.Byte[],System.Char[],System.Byte[])">
            <summary>
            Calculates a response for a password challenge, using a password.
            </summary>
            <param name="challenge">
            The challenge received from the server.
            </param>
            <param name="password">
            The password to encrypt the challenge with.
            </param>
            <param name="response">
            The response to send back to the server.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.IVncPasswordChallenge.GetChallengeResponse(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Calculates a response for a password challenge, using a password.
            </summary>
            <param name="challenge">
            The challenge received from the server.
            </param>
            <param name="password">
            The password to encrypt the challenge with.
            </param>
            <param name="response">
            The response to send back to the server.
            </param>
        </member>
        <member name="T:RemoteViewing.Vnc.IVncRemoteController">
            <summary>
            Commmon interface for classes that allow you to remotely control VNC servers. Supports touch
            and text gestures.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.IVncRemoteController.HandleTouchEvent(System.Object,RemoteViewing.Vnc.PointerChangedEventArgs)">
            <summary>
            Handles a touch event.
            </summary>
            <param name="sender">
            The sender of the event.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="T:RemoteViewing.Vnc.IVncRemoteKeyboard">
            <summary>
            Commmon interface for classes that allow you to remotely control VNC servers. Supports keyboard events.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.IVncRemoteKeyboard.HandleKeyEvent(System.Object,RemoteViewing.Vnc.KeyChangedEventArgs)">
            <summary>
            Handles a key event.
            </summary>
            <param name="sender">
            The sender of the event.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="T:RemoteViewing.Vnc.KeyChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:RemoteViewing.Vnc.Server.VncServerSession.KeyChanged"/> event.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.KeyChangedEventArgs.#ctor(RemoteViewing.Vnc.KeySym,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.KeyChangedEventArgs"/> class.
            </summary>
            <param name="keysym">The X11 keysym of the key. For many keys this is the ASCII value.</param>
            <param name="pressed"><c>true</c> for a key press event, or <c>false</c> for a key release event.</param>
        </member>
        <member name="P:RemoteViewing.Vnc.KeyChangedEventArgs.Keysym">
            <summary>
            Gets the X11 keysym of the key. For many keys this is the ASCII value.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.KeyChangedEventArgs.Pressed">
            <summary>
            Gets a value indicating whether a key was pressed.
            </summary>
            <value>
            <c>true</c> for a key press event, or <c>false</c> for a key release event.
            </value>
        </member>
        <member name="T:RemoteViewing.Vnc.KeySym">
            <summary>
            <para>
              keysym codes are 29-bit integer values identify characters or
              functions associated with each key (e.g., via the visible
              engraving) of a keyboard layout.
            </para>
            <para>
              For most ordinary keys, the keysym is the same as the corresponding
              ASCII value.
            </para>
            <para>
              Modern versions of the X Window System handle keysyms for Unicode
              characters, consisting of the Unicode character with the hex
              1000000 bit set.
            </para>
            </summary>
            <seealso href="https://cgit.freedesktop.org/xorg/proto/x11proto/tree/keysymdef.h"/>
            <seealso href="https://tools.ietf.org/pdf/rfc6143.pdf"/>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.VoidSymbol">
            <summary>
            The void symbol.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Backspace">
            <summary>
            Back space key
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Tab">
            <summary>
            The tab key
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.LineFeed">
            <summary>
            The line feed key
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Clear">
            <summary>
            The clear key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Return">
            <summary>
            The return (enter) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Pause">
            <summary>
            The pause key
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.ScrollLock">
            <summary>
            The scroll lock key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.SysReq">
            <summary>
            The Sys Req key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Escape">
            <summary>
            The escape key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Delete">
            <summary>
            The delete key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Home">
            <summary>
            The home key
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Left">
            <summary>
            The left arrow key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Up">
            <summary>
            The up arrow key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Right">
            <summary>
            The right arrow key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Down">
            <summary>
            The down key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Prior">
            <summary>
            The previous key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.PageUp">
            <summary>
            The page up key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Next">
            <summary>
            The next key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.PageDown">
            <summary>
            The page down key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.End">
            <summary>
            The end key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Begin">
            <summary>
            The begin key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Select">
            <summary>
            The select key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Print">
            <summary>
            The print screen key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Execute">
            <summary>
            The execute key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Insert">
            <summary>
            The insert key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Undo">
            <summary>
            The undo key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Redo">
            <summary>
            The redo key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Menu">
            <summary>
            The menu key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Find">
            <summary>
            The find key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Cancel">
            <summary>
            The cancel key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Help">
            <summary>
            The help key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Break">
            <summary>
            The break key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.ModeSwitch">
            <summary>
            The switch key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Num_Lock">
            <summary>
            The num lock key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadSpace">
            <summary>
            The space key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadTab">
            <summary>
            The tab key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadEnter">
            <summary>
            The enter key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadF1">
            <summary>
            The F1 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadF2">
            <summary>
            The F2 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadF3">
            <summary>
            The F3 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadF4">
            <summary>
            The F4 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadHome">
            <summary>
            The home key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadLeft">
            <summary>
            The left key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadUp">
            <summary>
            The up key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadRight">
            <summary>
            The right key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadDown">
            <summary>
            The down key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadPrior">
            <summary>
            The prior key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadPageUp">
            <summary>
            The up key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadNext">
            <summary>
            The next key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadPageDown">
            <summary>
            The page down key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadEnd">
            <summary>
            The end key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadBegin">
            <summary>
            The begin key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadInsert">
            <summary>
            The insert key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadDelete">
            <summary>
            The delete key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadEqual">
            <summary>
            The equals key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadMultiply">
            <summary>
            The multiply key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadAdd">
            <summary>
            The addition key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadSeparator">
            <summary>
            The separator key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadSubtract">
            <summary>
            The substract key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadDecimal">
            <summary>
            The decimal divider key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPadDivide">
            <summary>
            The divide key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPad0">
            <summary>
            The 0 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPad1">
            <summary>
            The 1 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPad2">
            <summary>
            The 2 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPad3">
            <summary>
            The 3 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPad4">
            <summary>
            The 4 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPad5">
            <summary>
            The 5 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPad6">
            <summary>
            The 6 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPad7">
            <summary>
            The 7 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPad8">
            <summary>
            The 8 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumPad9">
            <summary>
            The 9 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F1">
            <summary>
            The F1 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F2">
            <summary>
            The F2 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F3">
            <summary>
            The F3 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F4">
            <summary>
            The F4 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F5">
            <summary>
            The F5 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F6">
            <summary>
            The F6 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F7">
            <summary>
            The F7 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F8">
            <summary>
            The F8 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F9">
            <summary>
            The F9 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F10">
            <summary>
            The F10 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F11">
            <summary>
            The F11 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F12">
            <summary>
            The F12 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F13">
            <summary>
            The F13 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F14">
            <summary>
            The F14 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F15">
            <summary>
            The F15 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F16">
            <summary>
            The F16 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F17">
            <summary>
            The F17 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F18">
            <summary>
            The F18 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F19">
            <summary>
            The F19 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F20">
            <summary>
            The F20 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F21">
            <summary>
            The F21 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F22">
            <summary>
            The F22 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F23">
            <summary>
            The F23 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F24">
            <summary>
            The F24 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.ShiftLeft">
            <summary>
            The left shift key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.ShiftRight">
            <summary>
            The right shift key
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.ControlLeft">
            <summary>
            The left control key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.ControlRight">
            <summary>
            The right control key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.CapsLock">
            <summary>
            The caps lock key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.ShiftLock">
            <summary>
            The shift lock key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.MetaLeft">
            <summary>
            The left meta key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.MetaRight">
            <summary>
            The right meta key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.AltLeft">
            <summary>
            The left alt key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.AltRight">
            <summary>
            The right alt key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.SuperLeft">
            <summary>
            The left super key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.SuperRight">
            <summary>
            The right super key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.HyperLeft">
            <summary>
            The left hyper key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.HyperRight">
            <summary>
            The right hyper key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Space">
            <summary>
            The space key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Exclamation">
            <summary>
            The exclamation mark (!) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Quote">
            <summary>
            The double quotation (") key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.NumberSign">
            <summary>
            The number sign (#) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Dollar">
            <summary>
            The dollar sign ($) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Percent">
            <summary>
            The precent sign (%) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Ampersand">
            <summary>
            The ampersand (&amp;) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Apostrophe">
            <summary>
            The apostrophe (') key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.ParenthesisLeft">
            <summary>
            The left parenthesis (() key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.ParenthesisRight">
            <summary>
            The right parenthesis ()) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Asterisk">
            <summary>
            The aserisk (*) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Plus">
            <summary>
            The plus (+) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Comma">
            <summary>
            The comma (,) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Minus">
            <summary>
            The minus sign key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Period">
            <summary>
            The full stop (.) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Slash">
            <summary>
            The slash (/) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.D0">
            <summary>
            The 0 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.D1">
            <summary>
            The 1 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.D2">
            <summary>
            The 2 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.D3">
            <summary>
            The 3 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.D4">
            <summary>
            The 4 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.D5">
            <summary>
            The 5 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.D6">
            <summary>
            The 6 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.D7">
            <summary>
            The 7 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.D8">
            <summary>
            The 8 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.D9">
            <summary>
            The 9 key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Colon">
            <summary>
            The colon (:) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Semicolon">
            <summary>
            The semicolon (;) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Less">
            <summary>
            The less than (&lt;) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Equal">
            <summary>
            The equals (=) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Greater">
            <summary>
            The greather than (&gt;) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Question">
            <summary>
            The question mark (?) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.At">
            <summary>
            The at (@) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.A">
            <summary>
            The capital letter A key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.B">
            <summary>
            The capital letter B key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.C">
            <summary>
            The capital letter C key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.D">
            <summary>
            The capital letter D key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.E">
            <summary>
            The capital letter E key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.F">
            <summary>
            The capital letter F key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.G">
            <summary>
            The capital letter G key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.H">
            <summary>
            The capital letter H key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.I">
            <summary>
            The capital letter I key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.J">
            <summary>
            The capital letter J key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.K">
            <summary>
            The capital letter K key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.L">
            <summary>
            The capital letter L key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.M">
            <summary>
            The capital letter M key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.N">
            <summary>
            The capital letter N key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.O">
            <summary>
            The capital letter O key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.P">
            <summary>
            The capital letter P key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Q">
            <summary>
            The capital letter Q key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.R">
            <summary>
            The capital letter R key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.S">
            <summary>
            The capital letter S key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.T">
            <summary>
            The capital letter T key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.U">
            <summary>
            The capital letter U key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.V">
            <summary>
            The capital letter V key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.W">
            <summary>
            The capital letter W key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.X">
            <summary>
            The capital letter X key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Y">
            <summary>
            The capital letter Y key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Z">
            <summary>
            The capital letter Z key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.BracketLeft">
            <summary>
            The left square bracket ([) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Backslash">
            <summary>
            The backslash (\) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Bracketright">
            <summary>
            The right square bracket (]) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.AsciiCircum">
            <summary>
            The cirumflex accent (^) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Underscore">
            <summary>
            The underscore (_) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Grave">
            <summary>
            The grave accent (`) sign.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.a">
            <summary>
            The small letter a key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.b">
            <summary>
            The small letter b key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.c">
            <summary>
            The small letter c key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.d">
            <summary>
            The small letter d key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.e">
            <summary>
            The small letter e key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.f">
            <summary>
            The small letter f key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.g">
            <summary>
            The small letter g key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.h">
            <summary>
            The small letter h key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.i">
            <summary>
            The small letter i key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.j">
            <summary>
            The small letter j key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.k">
            <summary>
            The small letter k key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.l">
            <summary>
            The small letter l key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.m">
            <summary>
            The small letter m key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.n">
            <summary>
            The small letter n key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.o">
            <summary>
            The small letter o key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.p">
            <summary>
            The small letter p key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.q">
            <summary>
            The small letter q key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.r">
            <summary>
            The small letter r key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.s">
            <summary>
            The small letter s key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.t">
            <summary>
            The small letter t key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.u">
            <summary>
            The small letter u key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.v">
            <summary>
            The small letter v key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.w">
            <summary>
            The small letter w key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.x">
            <summary>
            The small letter x key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.y">
            <summary>
            The small letter y key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.z">
            <summary>
            The small letter z key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.BraceLeft">
            <summary>
            The left curly bracket ({) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.Bar">
            <summary>
            The vertical bar (|) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.BraceRight">
            <summary>
            The right curly bracket (}) key.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.KeySym.AsciiTilde">
            <summary>
            The tilde (~) key.
            </summary>
        </member>
        <member name="T:RemoteViewing.Vnc.KeySymHelpers">
            <summary>
            Provides helper methods for working with <see cref="T:RemoteViewing.Vnc.KeySym"/> value.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.KeySymHelpers.IsAscii(RemoteViewing.Vnc.KeySym)">
            <summary>
            Determines whether a <see cref="T:RemoteViewing.Vnc.KeySym"/> value represents an ASCII character.
            </summary>
            <param name="key">
            The <see cref="T:RemoteViewing.Vnc.KeySym"/> key for which to determine whether it is an ASCII character.
            </param>
            <returns>
            <see langword="true"/> if <paramref name="key"/> represents an ASCII character;
            otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.KeySymHelpers.ToChar(RemoteViewing.Vnc.KeySym)">
            <summary>
            Converts a <see cref="T:RemoteViewing.Vnc.KeySym"/> value to its <see cref="T:System.Char"/> equivalent.
            </summary>
            <param name="key">
            The <see cref="T:RemoteViewing.Vnc.KeySym"/> value to convert.
            </param>
            <returns>
            The equivalent <see cref="T:System.Char"/> value.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.KeySymHelpers.FromChar(System.Char)">
            <summary>
            Converts a <see cref="T:System.Char"/> to its equivalent <see cref="T:RemoteViewing.Vnc.KeySym"/> representation.
            </summary>
            <param name="c">
            The chracter to convert.
            </param>
            <returns>
            The equivalent <see cref="T:RemoteViewing.Vnc.KeySym"/> value.
            </returns>
        </member>
        <member name="T:RemoteViewing.Vnc.Messages.FramebufferUpdate">
            <summary>
            A message from the server to the client which notifies the client of an update to the framebuffer.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Messages.FramebufferUpdate.buffer">
            <summary>
            The underlying buffer.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Messages.FramebufferUpdate.MessageType">
            <summary>
            Gets or sets the message type. This should always be 0.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Messages.FramebufferUpdate.NumberOfRectangles">
            <summary>
            Gets or sets the number of rectangles which have been updated.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Messages.FramebufferUpdate.Buffer">
            <summary>
            Gets the underlying buffer.
            </summary>
        </member>
        <member name="T:RemoteViewing.Vnc.Messages.FramebufferUpdateRectangle">
            <summary>
            A request to update an rectangle in a framebuffer.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Messages.FramebufferUpdateRectangle.buffer">
            <summary>
            The underlying buffer.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Messages.FramebufferUpdateRectangle.X">
            <summary>
            Gets or sets the x-coordinate of the upper left corner of the rectangle.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Messages.FramebufferUpdateRectangle.Y">
            <summary>
            Gets or sets the y-coordinate of the upper left corner of the rectangle.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Messages.FramebufferUpdateRectangle.Width">
            <summary>
            Gets or sets the width of the rectangle.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Messages.FramebufferUpdateRectangle.Height">
            <summary>
            Gets or sets the height of the rectangle.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Messages.FramebufferUpdateRectangle.EncodingType">
            <summary>
            Gets or sets the encoding used to encode the pixels in the rectangle.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Messages.FramebufferUpdateRectangle.Buffer">
            <summary>
            Gets the underlying memory.
            </summary>
        </member>
        <member name="T:RemoteViewing.Vnc.PointerChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:RemoteViewing.Vnc.Server.VncServerSession.PointerChanged"/> event.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.PointerChangedEventArgs.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.PointerChangedEventArgs"/> class.
            </summary>
            <param name="x">The X coordinate of the mouse.</param>
            <param name="y">The Y coordinate of the mouse.</param>
            <param name="pressedButtons">
                A bit mask of pressed mouse buttons, in X11 convention: 1 is left, 2 is middle, and 4 is right.
                Mouse wheel scrolling is treated as a button event: 8 for up and 16 for down.
            </param>
        </member>
        <member name="P:RemoteViewing.Vnc.PointerChangedEventArgs.X">
            <summary>
            Gets the X coordinate of the mouse.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.PointerChangedEventArgs.Y">
            <summary>
            Gets the Y coordinate of the mouse.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.PointerChangedEventArgs.PressedButtons">
            <summary>
            Gets aA bit mask of pressed mouse buttons, in X11 convention: 1 is left, 2 is middle, and 4 is right.
            Mouse wheel scrolling is treated as a button event: 8 for up and 16 for down.
            </summary>
        </member>
        <member name="T:RemoteViewing.Vnc.RemoteClipboardChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:RemoteViewing.Vnc.VncClient.RemoteClipboardChanged"/> event.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.RemoteClipboardChangedEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.RemoteClipboardChangedEventArgs"/> class.
            </summary>
            <param name="contents">The contents of the remote clipboard.</param>
        </member>
        <member name="P:RemoteViewing.Vnc.RemoteClipboardChangedEventArgs.Contents">
            <summary>
            Gets the contents of the remote clipboard.
            </summary>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.CreatingDesktopEventArgs">
            <summary>
            Provides data for the <see cref="E:RemoteViewing.Vnc.Server.VncServerSession.CreatingDesktop"/> event.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.CreatingDesktopEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.Server.CreatingDesktopEventArgs"/> class.
            </summary>
            <param name="shareDesktop">
                <c>true</c> if the client will share the desktop with other currently-connected clients.
                <c>false</c> if the client is asking for exclusive access to the desktop.
            </param>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.CreatingDesktopEventArgs.ShareDesktop">
            <summary>
            Gets a value indicating whether the client will share the desktop with other currently-connected
            clients.
            </summary>
            <value>
            <c>true</c> if the client will share the desktop with other currently-connected clients.
            <c>false</c> if the client is asking for exclusive access to the desktop.
            </value>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.EncoderStatistics">
            <summary>
            Tracks the performance of an individual encoder.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.EncoderStatistics.Rectangles">
            <summary>
            Gets or sets the total amount of rectangles transferred.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.EncoderStatistics.RawBytes">
            <summary>
            Gets or sets the total number of bytes transferred, in raw format.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.EncoderStatistics.EncodedBytes">
            <summary>
            Gets or sets the total number of bytes transferred, in encoded format.
            </summary>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.FramebufferUpdateRequest">
            <summary>
            Stores information about an update request from the client.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.FramebufferUpdateRequest.#ctor(System.Boolean,RemoteViewing.Vnc.VncRectangle)">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.Server.FramebufferUpdateRequest"/> class.
            </summary>
            <param name="incremental">Whether an incremental update is desired.</param>
            <param name="region">The region to update.</param>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.FramebufferUpdateRequest.Incremental">
            <summary>
            Gets a value indicating whether an incremental update is desired.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.FramebufferUpdateRequest.Region">
            <summary>
            Gets the region to update.
            </summary>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.FramebufferUpdatingEventArgs">
            <summary>
            Provides data for the <see cref="E:RemoteViewing.Vnc.Server.VncServerSession.FramebufferUpdating"/> event.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.FramebufferUpdatingEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.Server.FramebufferUpdatingEventArgs"/> class.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.FramebufferUpdatingEventArgs.SentChanges">
            <summary>
            Gets or sets a value indicating whether you send an update in response to this event.
            </summary>
            <value>
            Set this to <c>true</c> if you send an update in response to this event.
            </value>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.IVncFramebufferCache">
            <summary>
            Caches the <see cref="T:RemoteViewing.Vnc.VncFramebuffer"/> pixel data and updates them as new
            <see cref="T:RemoteViewing.Vnc.VncFramebuffer"/> commands are received.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.IVncFramebufferCache.Framebuffer">
            <summary>
            Gets an up-to-date and complete <see cref="T:RemoteViewing.Vnc.VncFramebuffer"/>.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.IVncFramebufferCache.RespondToUpdateRequest(RemoteViewing.Vnc.Server.IVncServerSession)">
            <summary>
            Responds to a <see cref="T:RemoteViewing.Vnc.Server.VncServerSession"/> update request.
            </summary>
            <param name="session">
            The session on which the update request was received.
            </param>
            <returns>
            <see langword="true"/> if the operation completed successfully; otherwise,
            <see langword="false"/>.
            </returns>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.IVncServer">
            <summary>
            A shared interface for VNC servers which can host one or more VNC sessions.
            </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.IVncServer.Connected">
            <summary>
            Occurs when the VNC client has successfully connected to the server.
            </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.IVncServer.Closed">
            <summary>
            Occurs when the VNC client is disconnected.
            </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.IVncServer.PasswordProvided">
            <summary>
            Occurs when the VNC client provides a password.
            Respond to this event by accepting or rejecting the password.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.IVncServer.Sessions">
            <summary>
            Gets a list of all VNC sessions.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.IVncServer.StartAsync(System.Net.IPEndPoint,System.Threading.CancellationToken)">
            <summary>
            Asynchronously starts the VNC server.
            </summary>
            <param name="endPoint">
            A <see cref="T:System.Net.IPEndPoint"/> which represents the port at which the VNC server should listen.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> which can be used to cancel the asynchronous operation.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.IVncServer.StartReverseAsync(System.Net.IPEndPoint,System.Threading.CancellationToken)">
            <summary>
            Asynchronously starts a VNC server using reverse VNC connectivity.
            </summary>
            <param name="endPoint">
            A <see cref="T:System.Net.IPEndPoint"/> which represents the port of the VNC client to which the server should connect.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> which can be used to cancel the asynchronous operation.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.IVncServer.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously stops the VNC server.
            </summary>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> which can be used to cancel the asynchronous operation.
            </param>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.IVncServerSession">
            <summary>
            A common interface for a VNC server session.
            </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.IVncServerSession.KeyChanged">
            <summary>
            Occurs when a key has been pressed or released.
            </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.IVncServerSession.PointerChanged">
            <summary>
            Occurs on a mouse movement, button click, etc.
            </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.IVncServerSession.Connected">
            <summary>
            Occurs when the VNC client has successfully connected to the server.
            </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.IVncServerSession.ConnectionFailed">
            <summary>
            Occurs when the VNC client has failed to connect to the server.
            </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.IVncServerSession.Closed">
            <summary>
            Occurs when the VNC client is disconnected.
            </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.IVncServerSession.PasswordProvided">
            <summary>
            Occurs when the VNC client provides a password.
            Respond to this event by accepting or rejecting the password.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.IVncServerSession.Logger">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Extensions.Logging.ILogger"/> logger to use when logging.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.IVncServerSession.PasswordChallenge">
            <summary>
            Gets or sets the <see cref="T:RemoteViewing.Vnc.IVncPasswordChallenge"/> to use when authenticating clients.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.IVncServerSession.MaxUpdateRate">
            <summary>
            Gets or sets the max rate to send framebuffer updates at, in frames per second.
            </summary>
            <remarks>
            The default is 15.
            </remarks>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.IVncServerSession.CreateFramebufferCache">
            <summary>
            Gets or sets a function which initializes a new <see cref="T:RemoteViewing.Vnc.Server.IVncFramebufferCache"/> for use by
            this <see cref="T:RemoteViewing.Vnc.Server.VncServerSession"/>.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.IVncServerSession.FramebufferUpdateRequest">
            <summary>
            Gets information about the client's most recent framebuffer update request.
            This may be <see langword="null"/> if the client has no framebuffer request queued.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.IVncServerSession.FramebufferUpdateRequestLock">
            <summary>
            Gets a lock which should be used before performing any framebuffer updates.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.IVncServerSession.ClientEncodings">
            <summary>
            Gets a list of encodings supported by the client.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.IVncServerSession.Connect(System.IO.Stream,RemoteViewing.Vnc.Server.VncServerSessionOptions)">
            <summary>
            Starts a session with a VNC client.
            </summary>
            <param name="stream">The stream containing the connection.</param>
            <param name="options">Session options, if any.</param>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.IVncServerSession.Close">
            <summary>
            Closes the connection with the remote client.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.IVncServerSession.SetFramebufferSource(RemoteViewing.Vnc.IVncFramebufferSource)">
            <summary>
            Sets the framebuffer source.
            </summary>
            <param name="source">The framebuffer source, or <see langword="null"/> if you intend to handle the framebuffer manually.</param>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.IVncServerSession.FramebufferManualBeginUpdate">
            <summary>
            Begins a manual framebuffer update.
            </summary>
            <remarks>
            Do not call this method without holding <see cref="P:RemoteViewing.Vnc.Server.IVncServerSession.FramebufferUpdateRequestLock"/>.
            </remarks>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.IVncServerSession.FramebufferManualInvalidate(RemoteViewing.Vnc.VncRectangle)">
            <summary>
            Queues an update for the specified region.
            </summary>
            <remarks>
            Do not call this method without holding <see cref="P:RemoteViewing.Vnc.Server.IVncServerSession.FramebufferUpdateRequestLock"/>.
            </remarks>
            <param name="region">The region to invalidate.</param>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.IVncServerSession.FramebufferManualInvalidate(RemoteViewing.Vnc.VncRectangle[])">
            <summary>
            Queues an update for each of the specified regions.
            </summary>
            <remarks>
            Do not call this method without holding <see cref="P:RemoteViewing.Vnc.Server.IVncServerSession.FramebufferUpdateRequestLock"/>.
            </remarks>
            <param name="regions">The regions to invalidate.</param>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.IVncServerSession.FramebufferManualInvalidateAll">
            <summary>
            Queues an update for the entire framebuffer.
            </summary>
            <remarks>
            Do not call this method without holding <see cref="P:RemoteViewing.Vnc.Server.VncServerSession.FramebufferUpdateRequestLock"/>.
            </remarks>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.IVncServerSession.FramebufferManualEndUpdate">
            <summary>
            Completes a manual framebuffer update.
            </summary>
            <returns>
            <see langword="true"/> if the operation completed successfully; otherwise,
            <see langword="false"/>.
            </returns>
            <remarks>
            Do not call this method without holding <see cref="P:RemoteViewing.Vnc.Server.VncServerSession.FramebufferUpdateRequestLock"/>.
            </remarks>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.PasswordProvidedEventArgs">
            <summary>
            Provides data for the <see cref="E:RemoteViewing.Vnc.Server.VncServerSession.PasswordProvided"/> event.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.PasswordProvidedEventArgs.#ctor(RemoteViewing.Vnc.IVncPasswordChallenge,System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.Server.PasswordProvidedEventArgs"/> class.
            </summary>
            <param name="challenge">The VNC the server sent.</param>
            <param name="response">The bytes of the response from the client.</param>
            <param name="passwordChallenge">
            A class which implements the <see cref="T:RemoteViewing.Vnc.IVncPasswordChallenge"/> interface, which is able to validate the password.
            </param>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.PasswordProvidedEventArgs.IsAuthenticated">
            <summary>
            Gets a value indicating whether the client has successfully authenticated.
            </summary>
            <value>
            <c>true</c> if the client has successfully authenticated.
            </value>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.PasswordProvidedEventArgs.Accept">
            <summary>
            Successfully authenticates the client.
            </summary>
            <returns>Always <c>true</c>.</returns>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.PasswordProvidedEventArgs.Accept(System.Byte[])">
            <summary>
            Authenticates the client, if the password bytes match.
            </summary>
            <param name="password">The bytes of the password.</param>
            <returns><c>true</c> if authentication succeeded.</returns>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.PasswordProvidedEventArgs.Accept(System.Char[])">
            <summary>
            Authenticates the client, if the password characters match.
            </summary>
            <param name="password">The characters of the password.</param>
            <returns><c>true</c> if authentication succeeded.</returns>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.RawEncoder">
            <summary>
            Represents the raw VNC encoding protocol.
            </summary>
            <remarks>
            The simplest encoding type is raw pixel data. In this case the data consists of width * height pixel values
            (where width and height are the width and height of the rectangle). The values simply represent each pixel
            in left-to-right scanline order.
            </remarks>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#raw-encoding"/>.
        </member>
        <member name="P:RemoteViewing.Vnc.Server.RawEncoder.Encoding">
            <inheritdoc/>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.RawEncoder.Send(System.IO.Stream,RemoteViewing.Vnc.VncPixelFormat,RemoteViewing.Vnc.VncRectangle,System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.TightCompression">
            <summary>
            Determines the compression used by the <see cref="T:RemoteViewing.Vnc.Server.TightEncoder"/>.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.TightCompression.Basic">
            <summary>
            Use Basic compression, and compress all data using zlib.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.TightCompression.Jpeg">
            <summary>
            Use JPEG compression, and compress all images as a JPEG file.
            </summary>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.TightCompressionControl">
            <summary>
            Control flags used by the Tight compression protocol.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.TightCompressionControl.ResetStream0">
            <summary>
            Informs the client zlib compression stream at index 0 should be reset before decoding the rectangle.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.TightCompressionControl.ResetStream1">
            <summary>
            Informs the client zlib compression stream at index 1 should be reset before decoding the rectangle.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.TightCompressionControl.ResetStream2">
            <summary>
            Informs the client zlib compression stream at index 2 should be reset before decoding the rectangle.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.TightCompressionControl.ResetStream3">
            <summary>
            Informs the client zlib compression stream at index 3 should be reset before decoding the rectangle.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.TightCompressionControl.UseStream0">
            <summary>
            Informs the client zlib compression stream at index 0 should be used to decode the rectangle.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.TightCompressionControl.UseStream1">
            <summary>
            Informs the client zlib compression stream at index 1 should be used to decode the rectangle.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.TightCompressionControl.UseStream2">
            <summary>
            Informs the client zlib compression stream at index 2 should be used to decode the rectangle.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.TightCompressionControl.UseStream3">
            <summary>
            Informs the client zlib compression stream at index 3 should be used to decode the rectangle.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.TightCompressionControl.ReadFilterId">
            <summary>
            Informs the client the next byte specifies the <c>filter-id</c> value which tells the decoder
            what filter type was used by the encoder to pre-process pixel data before the compression.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.TightCompressionControl.BasicCompression">
            <summary>
            Informs the client basic compression has been used.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.TightCompressionControl.FillCompression">
            <summary>
            Informs the client fill compression has been used.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.TightCompressionControl.JpegCompression">
            <summary>
            Informs the client JPEG compression has been used.
            </summary>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.TightEncoder">
            <summary>
            Tight encoding provides efficient compression for pixel data, using zlib compression (over 4 multiple zlib streams),
            JPEG compression or fill compression, and optionally applying filters to the raw pixel data.
            </summary>
            <remarks>
            The <see cref="T:RemoteViewing.Vnc.Server.TightEncoder"/> currently only implements zlib compression over a single zlib stream,
            which is reset after every rectangle.
            </remarks>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#tight-encoding"/>
            <seealso href="https://virtualgl.org/pmwiki/uploads/About/tighttoturbo.pdf"/>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.TightEncoder.QualityLevels">
            <summary>
            Mapping of Tight quality levels to JPEG quality levels.
            </summary>
            <seealso href=""/>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.TightEncoder.compressor">
            <summary>
            The TurboJpeg compressor which will be used to compress rectangles into JPEG format.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.TightEncoder.#ctor(RemoteViewing.Vnc.Server.IVncServerSession)">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.Server.TightEncoder"/> class.
            </summary>
            <param name="vncServerSession">
            The parent session to which this <see cref="T:RemoteViewing.Vnc.Server.TightEncoder"/> is linked.
            </param>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.TightEncoder.Encoding">
            <inheritdoc/>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.TightEncoder.Compression">
            <summary>
            Gets or sets the compression method used.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.TightEncoder.VncServerSession">
            <summary>
            Gets the <see cref="P:RemoteViewing.Vnc.Server.TightEncoder.VncServerSession"/> to which this <see cref="T:RemoteViewing.Vnc.Server.TightEncoder"/> is linked.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.TightEncoder.WriteEncodedValue(System.Byte[],System.Int32,System.Int32)">
            <summary>Encode a value into a byte array.</summary>
            <param name="buffer">The byte array to encode the 7-bit integer into.</param>
            <param name="startIndex">The index of the first byte for the 7-bit integer.</param>
            <param name="value">The value to encode into <paramref name="buffer"/>.</param>
            <returns>Index of the first byte after the encoded value in <paramref name="buffer"/>.</returns>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.TightEncoder.GetCompressionLevel(RemoteViewing.Vnc.Server.IVncServerSession)">
            <summary>
            Gets the zlib compression level to use.
            </summary>
            <param name="vncServerSession">
            The current VNC server session.
            </param>
            <returns>
            The <see cref="T:SharpCompress.Compressors.Deflate.CompressionLevel"/> to use for zlib streams for this session.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.TightEncoder.GetQualityLevel(RemoteViewing.Vnc.Server.IVncServerSession)">
            <summary>
            Gets the JPEG quality level to use.
            </summary>
            <param name="vncServerSession">
            The current VNC server session.
            </param>
            <returns>
            The JPEG quality level to use, or 0 when JPEG compression should be disabled.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.TightEncoder.Send(System.IO.Stream,RemoteViewing.Vnc.VncPixelFormat,RemoteViewing.Vnc.VncRectangle,System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.TightEncoder.SendWithJpegCompression(System.IO.Stream,RemoteViewing.Vnc.VncPixelFormat,RemoteViewing.Vnc.VncRectangle,System.Byte[],System.Int32)">
            <summary>
            Sends a rectangle using JPEG compression.
            </summary>
            <param name="stream">
            The <see cref="T:System.IO.Stream"/> which represents connectivity with the client.
            </param>
            <param name="pixelFormat">
            The pixel format to use. This must be <see cref="P:RemoteViewing.Vnc.VncPixelFormat.RGB32"/>.
            </param>
            <param name="region">
            The rectangle to send.
            </param>
            <param name="contents">
            A buffer holding the raw pixel data for the rectangle.
            </param>
            <param name="jpegQualityLevel">
            The JPEG quality level to use.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.TightEncoder.SendWithBasicCompression(System.IO.Stream,RemoteViewing.Vnc.VncPixelFormat,RemoteViewing.Vnc.VncRectangle,System.Byte[])">
            <summary>
            Sends a rectangle using basic compression.
            </summary>
            <param name="stream">
            The <see cref="T:System.IO.Stream"/> which represents connectivity with the client.
            </param>
            <param name="pixelFormat">
            The pixel format to use.
            </param>
            <param name="region">
            The rectangle to send.
            </param>
            <param name="contents">
            A buffer holding the raw pixel data for the rectangle.
            </param>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.VncEncoder">
            <summary>
            A common base class for VNC encoders.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.VncEncoder.Encoding">
            <summary>
            Gets the <see cref="T:RemoteViewing.Vnc.Server.VncEncoder"/> protocol implemented by this <see cref="T:RemoteViewing.Vnc.Server.VncEncoder"/>.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncEncoder.Send(System.IO.Stream,RemoteViewing.Vnc.VncPixelFormat,RemoteViewing.Vnc.VncRectangle,System.Byte[])">
            <summary>
            Sends the contents of a rectangle to the client.
            </summary>
            <param name="stream">
            A <see cref="T:System.IO.Stream"/> which represents the connection to the VNC client.
            </param>
            <param name="pixelFormat">
            The <see cref="T:RemoteViewing.Vnc.VncPixelFormat"/> being used.
            </param>
            <param name="region">
            The dimesions of the rectangle.
            </param>
            <param name="contents">
            The contents of the rectangle, in raw pixel format.
            </param>
            <returns>
            The total number of bytes written to the wire. Used for bookkeeping.
            </returns>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.VncFramebufferCache">
            <summary>
            Caches the <see cref="T:RemoteViewing.Vnc.VncFramebuffer"/> pixel data and updates them as new
            <see cref="T:RemoteViewing.Vnc.VncFramebuffer"/> commands are received.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncFramebufferCache.#ctor(RemoteViewing.Vnc.VncFramebuffer,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.Server.VncFramebufferCache"/> class.
            </summary>
            <param name="framebuffer">
            The <see cref="T:RemoteViewing.Vnc.VncFramebuffer"/> to cache.
            </param>
            <param name="logger">
            The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> logger to use when logging diagnostic messages.
            </param>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.VncFramebufferCache.Framebuffer">
            <summary>
            Gets an up-to-date and complete <see cref="T:RemoteViewing.Vnc.VncFramebuffer"/>.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncFramebufferCache.RespondToUpdateRequest(RemoteViewing.Vnc.Server.IVncServerSession)">
            <summary>
            Responds to a <see cref="T:RemoteViewing.Vnc.Server.VncServerSession"/> update request.
            </summary>
            <param name="session">
            The session on which the update request was received.
            </param>
            <returns>
            <see langword="true"/> if the operation completed successfully; otherwise,
            <see langword="false"/>.
            </returns>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.VncMessageType">
            <summary>
            Represents the different kinds of messages that can be exchanged between a VNC server and client.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.VncMessageType.SetPixelFormat">
            <summary>
            Sets the format in which pixel values should be sent in FramebufferUpdate messages.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.VncMessageType.SetEncodings">
            <summary>
            Sets the encoding types in which pixel data can be sent by the server.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.VncMessageType.FrameBufferUpdateRequest">
            <summary>
            Notifies the server that the client is interested in the area of the framebuffer specified by
            x-position, y-position, width and height.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.VncMessageType.KeyEvent">
            <summary>
            A key press or release.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.VncMessageType.PointerEvent">
            <summary>
            Indicates either pointer movement or a pointer button press or release.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.VncMessageType.ClientCutText">
            <summary>
            The client has new ISO 8859-1 (Latin-1) text in its cut buffer.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.VncMessageType.EnableContinuousUpdates">
            <summary>
            This message informs the server to switch between only sending FramebufferUpdate messages as a
            result of a FramebufferUpdateRequest message, or sending FramebufferUpdate messages continuously.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.VncMessageType.ClientFence">
            <summary>
            A client supporting the Fence extension sends this to request a synchronisation of the data stream.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.VncMessageType.Xvp">
            <summary>
            A client supporting the xvp extension sends this to request that the server initiate a clean shutdown,
            clean reboot or abrupt reset of the system whose framebuffer the client is displaying.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.VncMessageType.SetDesktopSize">
            <summary>
            Requests a change of desktop size.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.VncMessageType.Unknown">
            <summary>
            Represents an unknown message type.
            </summary>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.VncServer">
            <summary>
            A <see cref="T:RemoteViewing.Vnc.Server.IVncServer"/> which uses a purely managed implementation.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServer.#ctor(RemoteViewing.Vnc.IVncFramebufferSource,RemoteViewing.Vnc.IVncRemoteKeyboard,RemoteViewing.Vnc.IVncRemoteController,Microsoft.Extensions.Logging.ILogger{RemoteViewing.Vnc.Server.VncServer})">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.Server.VncServer"/> class.
            </summary>
            <param name="framebufferSource">
            The framebuffer source for all sessions which connect to this server.
            </param>
            <param name="keyboard">
            The keyboard for all sessions which connect to this server.
            </param>
            <param name="controller">
            The controller for all sessions which connect to this server.
            </param>
            <param name="logger">
            The logger to use.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServer.#ctor(RemoteViewing.Vnc.IVncFramebufferSource,RemoteViewing.Vnc.IVncRemoteKeyboard,RemoteViewing.Vnc.IVncRemoteController,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.Server.VncServer"/> class.
            </summary>
            <param name="framebufferSource">
            The framebuffer source for all sessions which connect to this server.
            </param>
            <param name="keyboard">
            The keyboard for all sessions which connect to this server.
            </param>
            <param name="controller">
            The controller for all sessions which connect to this server.
            </param>
            <param name="logger">
            The logger to use.
            </param>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.VncServer.Connected">
            <inheritdoc/>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.VncServer.Closed">
            <inheritdoc/>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.VncServer.PasswordProvided">
            <inheritdoc/>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.VncServer.Sessions">
            <inheritdoc/>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServer.StartAsync(System.Net.IPEndPoint,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServer.StartReverseAsync(System.Net.IPEndPoint,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServer.StopAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServer.DisposeAsync">
            <inheritdoc/>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServer.Run">
            <summary>
            The main loop of the VNC server. Listens for new connections, and spawns new <see cref="T:RemoteViewing.Vnc.Server.VncServerSession"/>s.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> which represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServer.OnConnected(System.Object,System.EventArgs)">
            <summary>
            Raises the <see cref="E:RemoteViewing.Vnc.Server.VncServer.Connected"/> event.
            </summary>
            <param name="sender">
            The sender of the event.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServer.OnClosed(System.Object,System.EventArgs)">
            <summary>
            Raises the <see cref="E:RemoteViewing.Vnc.Server.VncServer.Closed"/> event.
            </summary>
            <param name="sender">
            The sender of the event.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServer.OnPasswordProvided(System.Object,RemoteViewing.Vnc.Server.PasswordProvidedEventArgs)">
            <summary>
            Raises the <see cref="E:RemoteViewing.Vnc.Server.VncServer.PasswordProvided"/> event.
            </summary>
            <param name="sender">
            The sender of the event.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.VncServerSession">
            <summary>
            Serves a VNC client with framebuffer information and receives keyboard and mouse interactions.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.Server.VncServerSession"/> class.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.#ctor(RemoteViewing.Vnc.IVncPasswordChallenge,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.Server.VncServerSession"/> class.
            </summary>
            <param name="passwordChallenge">
            The <see cref="T:RemoteViewing.Vnc.IVncPasswordChallenge"/> to use to generate password challenges.
            </param>
            <param name="logger">
            The logger to use when logging diagnostic messages.
            </param>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.VncServerSession.PasswordProvided">
            <summary>
            Occurs when the VNC client provides a password.
            Respond to this event by accepting or rejecting the password.
            </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.VncServerSession.CreatingDesktop">
            <summary>
            Occurs when the client requests access to the desktop.
            It may request exclusive or shared access -- this event will relay that information.
            </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.VncServerSession.Connected">
            <summary>
            Occurs when the VNC client has successfully connected to the server.
            </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.VncServerSession.ConnectionFailed">
            <summary>
            Occurs when the VNC client has failed to connect to the server.
            </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.VncServerSession.Closed">
            <summary>
            Occurs when the VNC client is disconnected.
            </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.VncServerSession.FramebufferCapturing">
             <summary>
             Occurs when the framebuffer needs to be captured.
             If you have not called <see cref="M:RemoteViewing.Vnc.Server.VncServerSession.SetFramebufferSource(RemoteViewing.Vnc.IVncFramebufferSource)"/>, alter the framebuffer
             in response to this event.
            
             <see cref="P:RemoteViewing.Vnc.Server.VncServerSession.FramebufferUpdateRequestLock"/> is held automatically while this event is raised.
             </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.VncServerSession.FramebufferUpdating">
             <summary>
             Occurs when the framebuffer needs to be updated.
             If you do not set <see cref="P:RemoteViewing.Vnc.Server.FramebufferUpdatingEventArgs.SentChanges"/>,
             <see cref="T:RemoteViewing.Vnc.Server.VncServerSession"/> will determine the updated regions itself.
            
             <see cref="P:RemoteViewing.Vnc.Server.VncServerSession.FramebufferUpdateRequestLock"/> is held automatically while this event is raised.
             </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.VncServerSession.KeyChanged">
            <summary>
            Occurs when a key has been pressed or released.
            </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.VncServerSession.PointerChanged">
            <summary>
            Occurs on a mouse movement, button click, etc.
            </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.Server.VncServerSession.RemoteClipboardChanged">
            <summary>
            Occurs when the clipboard changes on the remote client.
            If you are implementing clipboard integration, use this to set the local clipboard.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.VncServerSession.ClientVersion">
            <summary>
            Gets the protocol version of the client.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.VncServerSession.Framebuffer">
            <summary>
            Gets the framebuffer for the VNC session.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.VncServerSession.FramebufferUpdateRequest">
            <inheritdoc/>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.VncServerSession.PasswordChallenge">
            <summary>
            Gets or sets the <see cref="T:RemoteViewing.Vnc.IVncPasswordChallenge"/> to use when authenticating clients.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.VncServerSession.Logger">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Extensions.Logging.ILogger"/> logger to use when logging.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.VncServerSession.FramebufferUpdateRequestLock">
            <summary>
            Gets a lock which should be used before performing any framebuffer updates.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.VncServerSession.IsConnected">
            <summary>
            Gets a value indicating whether the server is connected to a client.
            </summary>
            <value>
            <c>true</c> if the server is connected to a client.
            </value>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.VncServerSession.MaxUpdateRate">
            <summary>
            Gets or sets the max rate to send framebuffer updates at, in frames per second.
            </summary>
            <remarks>
            The default is 15.
            </remarks>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.VncServerSession.UserData">
            <summary>
            Gets or sets user-specific data.
            </summary>
            <remarks>
            Store anything you want here.
            </remarks>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.VncServerSession.CreateFramebufferCache">
            <summary>
            Gets or sets a function which initializes a new <see cref="T:RemoteViewing.Vnc.Server.IVncFramebufferCache"/> for use by
            this <see cref="T:RemoteViewing.Vnc.Server.VncServerSession"/>.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.VncServerSession.Encoders">
            <summary>
            Gets a list of encoders which this <see cref="T:RemoteViewing.Vnc.Server.VncServerSession"/> can use.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.VncServerSession.ClientEncodings">
            <summary>
            Gets a list of encodings supported by the client.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.VncServerSession.Encoder">
            <summary>
            Gets or sets the encoder which is currently in use.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.VncServerSession.Statistics">
            <summary>
            Gets performance statistics for the various encoders used by this session.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.VncServerSession.ClientPixelFormat">
            <summary>
            Gets or sets the pixel format currently used by the client.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.Close">
            <summary>
            Closes the connection with the remote client.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.Connect(System.IO.Stream,RemoteViewing.Vnc.Server.VncServerSessionOptions)">
            <summary>
            Starts a session with a VNC client.
            </summary>
            <param name="stream">The stream containing the connection.</param>
            <param name="options">Session options, if any.</param>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.Connect(System.IO.Stream,RemoteViewing.Vnc.Server.VncServerSessionOptions,System.Boolean,System.Boolean)">
            <summary>
            Starts a session with a VNC client.
            </summary>
            <param name="stream">The stream containing the connection.</param>
            <param name="options">Session options, if any.</param>
            <param name="startThread">A value indicating whether to start the thread.</param>
            <param name="forceConnected">A value indicated whether to immediately set <see cref="P:RemoteViewing.Vnc.Server.VncServerSession.IsConnected"/>. Intended for unit tests only.</param>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.Bell">
            <summary>
            Tells the client to play a bell sound.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.SendLocalClipboardChange(System.String)">
            <summary>
            Notifies the client that the local clipboard has changed.
            If you are implementing clipboard integration, use this to set the remote clipboard.
            </summary>
            <param name="data">The contents of the local clipboard.</param>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.SetFramebufferSource(RemoteViewing.Vnc.IVncFramebufferSource)">
            <summary>
            Sets the framebuffer source.
            </summary>
            <param name="source">The framebuffer source, or <see langword="null"/> if you intend to handle the framebuffer manually.</param>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.FramebufferChanged">
            <summary>
            Notifies the framebuffer update thread to check for recent changes.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.FramebufferManualBeginUpdate">
            <inheritdoc/>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.FramebufferManualCopyRegion(RemoteViewing.Vnc.VncRectangle,System.Int32,System.Int32)">
            <summary>
            Queues an update corresponding to one region of the framebuffer being copied to another.
            </summary>
            <param name="target">
            The updated <see cref="T:RemoteViewing.Vnc.VncRectangle"/>.
            </param>
            <param name="sourceX">
            The X coordinate of the source.
            </param>
            <param name="sourceY">
            The Y coordinate of the source.
            </param>
            <remarks>
            Do not call this method without holding <see cref="P:RemoteViewing.Vnc.Server.VncServerSession.FramebufferUpdateRequestLock"/>.
            </remarks>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.FramebufferManualInvalidateAll">
            <inheritdoc/>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.FramebufferManualInvalidate(RemoteViewing.Vnc.VncRectangle)">
            <inheritdoc/>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.FramebufferManualInvalidate(RemoteViewing.Vnc.VncRectangle[])">
            <inheritdoc/>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.FramebufferManualEndUpdate">
            <inheritdoc/>s
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.FramebufferSendChanges">
            <summary>
            Sends the framebuffer changes to the client.
            </summary>
            <returns>
            <see langword="true"/> if the changes have been pushed correctly;
            otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.HandleMessage">
            <summary>
            Reads the next client message and handles it.
            </summary>
            <remarks>
            The <see cref="T:RemoteViewing.Vnc.Server.VncServerSession"/> starts a main thread which read and processes messages.
            You don't normally need to call this method yourself; but it can be usefull when writing
            unit tests.
            </remarks>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.NegotiateVersion(RemoteViewing.Vnc.AuthenticationMethod[]@)">
            <summary>
            Negotiates the version of the RFB protocol used by server and client.
            </summary>
            <param name="methods">
            The authentication methods supported by the server.
            </param>
            <returns>
            This method always returns <see langowrd="true"/>, though <paramref name="methods"/>
            will be an empty array if the client and server failed to negotiate version 3.8
            of the RFB protocol.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.NegotiateSecurity(RemoteViewing.Vnc.AuthenticationMethod[])">
            <summary>
            Negotiates the security mechanism used to authenticate the client, and authenticates the client.
            </summary>
            <param name="methods">
            The authentication methods supported by this server.
            </param>
            <returns>
            <see langword="true"/> if the client authenticated successfully; otherwise, <see langword="false"/>.
            </returns>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#712security"/>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.OnPasswordProvided(RemoteViewing.Vnc.Server.PasswordProvidedEventArgs)">
            <summary>
            Raises the <see cref="E:RemoteViewing.Vnc.Server.VncServerSession.PasswordProvided"/> event.
            </summary>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.OnCreatingDesktop(RemoteViewing.Vnc.Server.CreatingDesktopEventArgs)">
            <summary>
            Raises the <see cref="E:RemoteViewing.Vnc.Server.VncServerSession.CreatingDesktop"/> event.
            </summary>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.OnConnected">
            <summary>
            Raises the <see cref="E:RemoteViewing.Vnc.Server.VncServerSession.Connected"/> event.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.OnConnectionFailed">
            <summary>
            Raises the <see cref="E:RemoteViewing.Vnc.Server.VncServerSession.ConnectionFailed"/> event.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.OnClosed">
            <summary>
            Raises the <see cref="E:RemoteViewing.Vnc.Server.VncServerSession.Closed"/> event.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.OnFramebufferCapturing">
            <summary>
            Raises the <see cref="E:RemoteViewing.Vnc.Server.VncServerSession.FramebufferCapturing"/> event.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.OnFramebufferUpdating(RemoteViewing.Vnc.Server.FramebufferUpdatingEventArgs)">
            <summary>
            Raises the <see cref="E:RemoteViewing.Vnc.Server.VncServerSession.FramebufferUpdating"/> event.
            </summary>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.OnKeyChanged(RemoteViewing.Vnc.KeyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:RemoteViewing.Vnc.Server.VncServerSession.KeyChanged"/> event.
            </summary>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.OnPointerChanged(RemoteViewing.Vnc.PointerChangedEventArgs)">
            <summary>
            Raises the <see cref="E:RemoteViewing.Vnc.Server.VncServerSession.PointerChanged"/> event.
            </summary>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncServerSession.OnRemoteClipboardChanged(RemoteViewing.Vnc.RemoteClipboardChangedEventArgs)">
            <summary>
            Raises the <see cref="E:RemoteViewing.Vnc.Server.VncServerSession.RemoteClipboardChanged"/> event.
            </summary>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.VncServerSessionOptions">
            <summary>
            Specifies options for interacting with a VNC client.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.VncServerSessionOptions.AuthenticationMethod">
            <summary>
            Gets or sets the desired authentication method.
            </summary>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.ZlibEncoder">
            <summary>
            Implements the zlib encoding protocol.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#zlib-encoding"/>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.ZlibEncoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.Server.ZlibEncoder"/> class.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.Server.ZlibEncoder.Encoding">
            <inheritdoc/>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.ZlibEncoder.Send(System.IO.Stream,RemoteViewing.Vnc.VncPixelFormat,RemoteViewing.Vnc.VncRectangle,System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.WinApiMouseEventFlags">
            <summary>
            WinApiMouseEventFlags.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.WinApiMouseEventFlags.LEFTDOWN">
            <summary>
            LEFTDOWN
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.WinApiMouseEventFlags.LEFTUP">
            <summary>
            LEFTUP
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.WinApiMouseEventFlags.MIDDLEDOWN">
            <summary>
            MIDDLEDOWN
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.WinApiMouseEventFlags.MIDDLEUP">
            <summary>
            MIDDLEUP
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.WinApiMouseEventFlags.MOVE">
            <summary>
            MOVE
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.WinApiMouseEventFlags.ABSOLUTE">
            <summary>
            ABSOLUTE
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.WinApiMouseEventFlags.RIGHTDOWN">
            <summary>
            RIGHTDOWN
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.WinApiMouseEventFlags.RIGHTUP">
            <summary>
            RIGHTUP
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.WinApiMouseEventFlags.WHEEL">
            <summary>
            WHEEL
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.WinApiMouseEventFlags.XDOWN">
            <summary>
            XDOWN
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.WinApiMouseEventFlags.XUP">
            <summary>
            XUP
            </summary>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.X11MouseEventFlags">
            <summary>
            X11MouseEventFlags.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.X11MouseEventFlags.LEFTDOWN">
            <summary>
            LEFTDOWN
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.X11MouseEventFlags.MIDDLEDOWN">
            <summary>
            MIDDLEDOWN
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.X11MouseEventFlags.RIGHTDOWN">
            <summary>
            RIGHTDOWN
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.X11MouseEventFlags.SCROLLDOWN">
            <summary>
            SCROLLDOWN
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.Server.X11MouseEventFlags.SCROLLUP">
            <summary>
            SCROLLUP
            </summary>
        </member>
        <member name="T:RemoteViewing.Vnc.Server.VncMouse">
            <summary>
            This class can be used to add Windows mouse functionality to the VNC server part.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncMouse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.Server.VncMouse"/> class.
            Class that provides virtual mouse functionality to the VNC server.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.Server.VncMouse.OnMouseUpdate(System.Object,RemoteViewing.Vnc.PointerChangedEventArgs)">
            <summary>
            Callback function for mouse updates.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">EventArgs.</param>
        </member>
        <member name="T:RemoteViewing.Vnc.VncClient">
            <summary>
            Connects to a remote VNC server and interacts with it.
            </summary>
            <summary>
            Connects to a remote VNC server and interacts with it.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.VncClient"/> class.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncClient.#ctor(RemoteViewing.Vnc.IVncPasswordChallenge)">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.VncClient"/> class.
            </summary>
            <param name="passwordChallenge">
            A <see cref="T:RemoteViewing.Vnc.IVncPasswordChallenge"/> which can generate password challenges.
            </param>
        </member>
        <member name="E:RemoteViewing.Vnc.VncClient.Bell">
            <summary>
            Occurs when a bell occurs on the remote server.
            </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.VncClient.Connected">
            <summary>
            Occurs when the VNC client has successfully connected to the remote server.
            </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.VncClient.ConnectionFailed">
            <summary>
            Occurs when the VNC client has failed to connect to the server.
            </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.VncClient.Closed">
            <summary>
            Occurs when the VNC client is disconnected.
            </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.VncClient.FramebufferChanged">
            <summary>
            Occurs when the framebuffer changes.
            </summary>
        </member>
        <member name="E:RemoteViewing.Vnc.VncClient.RemoteClipboardChanged">
            <summary>
            Occurs when the clipboard changes on the remote server.
            If you are implementing clipboard integration, use this to set the local clipboard.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncClient.Framebuffer">
            <summary>
            Gets the framebuffer for the VNC session.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncClient.IsConnected">
            <summary>
            Gets a value indicating whether the client is connected to a server.
            </summary>
            <value>
            <c>true</c> if the client is connected to a server.
            </value>
        </member>
        <member name="P:RemoteViewing.Vnc.VncClient.MaxUpdateRate">
            <summary>
            Gets or sets the max rate to request framebuffer updates at, in frames per second.
            </summary>
            <remarks>
            The default is 15.
            </remarks>
        </member>
        <member name="P:RemoteViewing.Vnc.VncClient.ServerVersion">
            <summary>
            Gets the protocol version of the server.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncClient.UserData">
            <summary>
            Gets or sets user-specific data.
            </summary>
            <remarks>
            Store anything you want here.
            </remarks>
        </member>
        <member name="M:RemoteViewing.Vnc.VncClient.Close">
            <summary>
            Closes the connection with the remote server.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncClient.Connect(System.String,System.Int32,RemoteViewing.Vnc.VncClientConnectOptions)">
            <summary>
            Connects to a VNC server with the specified hostname and port.
            </summary>
            <param name="hostname">The name of the host to connect to.</param>
            <param name="port">The port to connect on. 5900 is the usual for VNC.</param>
            <param name="options">Connection options, if any. You can specify a password here.</param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncClient.Connect(System.IO.Stream,RemoteViewing.Vnc.VncClientConnectOptions)">
            <summary>
            Connects to a VNC server.
            </summary>
            <param name="stream">The stream containing the connection.</param>
            <param name="options">Connection options, if any. You can specify a password here.</param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncClient.SendLocalClipboardChange(System.String)">
            <summary>
            Notifies the server that the local clipboard has changed.
            If you are implementing clipboard integration, use this to set the remote clipboard.
            </summary>
            <param name="data">The contents of the local clipboard.</param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncClient.SendKeyEvent(RemoteViewing.Vnc.KeySym,System.Boolean)">
            <summary>
            Sends a key event to the VNC server to indicate a key has been pressed or released.
            </summary>
            <param name="keysym">The X11 keysym of the key. For many keys this is the ASCII value.</param>
            <param name="pressed"><c>true</c> for a key press event, or <c>false</c> for a key release event.</param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncClient.SendPointerEvent(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sends a pointer event to the VNC server to indicate mouse motion, a button click, etc.
            </summary>
            <param name="x">The X coordinate of the mouse.</param>
            <param name="y">The Y coordinate of the mouse.</param>
            <param name="pressedButtons">
                A bit mask of pressed mouse buttons, in X11 convention: 1 is left, 2 is middle, and 4 is right.
                Mouse wheel scrolling is treated as a button event: 8 for up and 16 for down.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncClient.GetFramebuffer(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Loads the framebuffer from the specified location and returns a function that can be used to copy the data to a bitmap.
            </summary>
            <param name="x">The x offset. (0 if null).</param>
            <param name="y">The y offset. (0 if null).</param>
            <param name="width">The width. (Framebuffer.Width if null).</param>
            <param name="height">The height (Framebuffer.Height if null).</param>
            <returns>An action with 2 parameters (BitmapData.Scan0 and BitmapData.Stride) that copies the framebuffer data to the specfied address.</returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncClient.Dispose">
            <summary>
            Disposes the client.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncClient.OnBell">
            <summary>
            Raises the <see cref="E:RemoteViewing.Vnc.VncClient.Bell"/> event.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncClient.OnConnected">
            <summary>
            Raises the <see cref="E:RemoteViewing.Vnc.VncClient.Connected"/> event.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncClient.OnConnectionFailed">
            <summary>
            Raises the <see cref="E:RemoteViewing.Vnc.VncClient.ConnectionFailed"/> event.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncClient.OnClosed">
            <summary>
            Raises the <see cref="M:RemoteViewing.Vnc.VncClient.Close"/> event.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncClient.OnFramebufferChanged(RemoteViewing.Vnc.FramebufferChangedEventArgs)">
            <summary>
            Raises the <see cref="E:RemoteViewing.Vnc.VncClient.FramebufferChanged"/> event.
            </summary>
            <param name="e">
            A <see cref="T:RemoteViewing.Vnc.FramebufferChangedEventArgs"/> that describes the changes
            in the framebuffer.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncClient.OnRemoteClipboardChanged(RemoteViewing.Vnc.RemoteClipboardChangedEventArgs)">
            <summary>
            Raises the <see cref="E:RemoteViewing.Vnc.VncClient.RemoteClipboardChanged"/> event.
            </summary>
            <param name="e">
            A <see cref="T:RemoteViewing.Vnc.RemoteClipboardChangedEventArgs"/> that contains information on the
            clipboard changes.
            </param>
        </member>
        <member name="T:RemoteViewing.Vnc.PasswordRequiredCallback">
            <summary>
            Called when a password is required and <see cref="P:RemoteViewing.Vnc.VncClientConnectOptions.Password"/> is <see langword="null"/>.
            </summary>
            <param name="client">The client needing a password.</param>
            <returns>The password, or <see langword="null"/> to not supply one.</returns>
        </member>
        <member name="T:RemoteViewing.Vnc.VncClientConnectOptions">
            <summary>
            Specifies options for connecting to a VNC server.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncClientConnectOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.VncClientConnectOptions"/> class.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncClientConnectOptions.Password">
            <summary>
            Gets or sets the password to authenticate with, if the server requires one.
            </summary>
            <remarks>
            <para>
            If this is <see langword="null"/> and a password is required, the connection will fail.
            <see langword="null"/> is different from a zero-character password.
            </para>
            <para>
            Only the first eight characters of a password are meaningful in
            traditional VNC authentication.
            </para>
            </remarks>
        </member>
        <member name="P:RemoteViewing.Vnc.VncClientConnectOptions.OnDemandMode">
            <summary>
            Gets or sets a value indicating whether a polling thread should be started and frame buffer updates
            are published via events or the frame buffer updates are triggered manually (on demand) by calling the respective functions.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncClientConnectOptions.PasswordRequiredCallback">
            <summary>
            Gets or sets a callback which is called when a password is required and
            <see cref="P:RemoteViewing.Vnc.VncClientConnectOptions.Password"/> is <see langword="null"/>.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncClientConnectOptions.ShareDesktop">
            <summary>
            Gets or sets a value indicating whether the session can be shared with
            any currently-connected clients.
            </summary>
            <value>
            <c>true</c> to share the desktop with any currently-connected clients.
            <c>false</c> to get exclusive access to the desktop.
            </value>
            <remarks>
            This is set to <c>true</c> by default.
            </remarks>
        </member>
        <member name="T:RemoteViewing.Vnc.VncEncoding">
            <summary>
            Defines the encoding format used by the client and the server.
            </summary>
            <seealso href="http://www.iana.org/assignments/rfb/rfb.xml#rfb-4"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.Raw">
            <summary>
            The data is encoded in the raw encoding format.
            </summary>
            <remarks>
            In this case the data consists of width × height pixel values (where width and height
            are the width and height of the rectangle). The values simply represent each pixel in
            left-to-right scanline order
            </remarks>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#raw-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.CopyRect">
            <summary>
            The CopyRect (copy rectangle) encoding is a very simple and efficient encoding which
            can be used when the client already has the same pixel data elsewhere in its framebuffer.
            The encoding on the wire simply consists of an X,Y coordinate. This gives a
            position in the framebuffer from which the client can copy the rectangle of pixel data.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#copyrect-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.RRE">
            <summary>
            RRE stands for rise-and-run-length encoding and as its name implies, it is essentially a
            two-dimensional analogue of run-length encoding. RRE-encoded rectangles arrive at the client
            in a form which can be rendered immediately and efficiently by the simplest of graphics engines.
            RRE is not appropriate for complex desktops, but can be useful in some situations.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#rre-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.CoRRE">
            <summary>
            CoRRE stands for compressed rise-and-run-length encoding and as its name implies, it is a variant
            of the above RRE Encoding and as such essentially a two-dimensional analogue of run-length encoding.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#corre-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.Hextile">
            <summary>
            Rectangles are split up into 16x16 tiles, allowing the dimensions of the subrectangles to be
            specified in 4 bits each, 16 bits in total. The rectangle is split into tiles starting at the
            top left going in left-to-right, topto-bottom order. The encoded contents of the tiles simply
            follow one another in the predetermined order.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#hextile-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.Zlib">
            <summary>
            Combines zlib compression, tiling, palettisation and run-length encoding. On the wire, the rectangle
            begins with a 4-byte length field, and is followed by that many bytes of zlib-compressed data.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#zlib-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.Tight">
            <summary>
            Tight encoding provides efficient compression for pixel data. To reduce implementation complexity, the
            width of any Tight-encoded rectangle cannot exceed 2048 pixels. If a wider rectangle is desired, it must
            be split into several rectangles and each one should be encoded separately.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#tight-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.ZlibHex">
            <summary>
            The zlibhex encoding uses zlib [3] to optionally compress subrectangles according to the Hextile Encoding.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#zlibhex-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TRLE">
            <summary>
            TRLE stands for Tiled Run-Length Encoding, and combines tiling, palettization, and run-length encoding.
            </summary>
            <seealso href="http://tools.ietf.org/html/rfc6143#page-27"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.Zrle">
            <summary>
            ZRLE stands for Zlib [3] Run-Length Encoding, and combines zlib compression, tiling, palettisation and
            run-length encoding. On the wire, the rectangle begins with a 4-byte length field, and is followed by
            that many bytes of zlib-compressed data.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#zrle-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.Jpeg">
            <summary>
            JPEG encoding.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.JRLE">
            <summary>
            A hybrid of lossy and lossless encodings, in particular JPEG and a variation of RLE (Run Length Encoding).
            </summary>
            <seealso href="http://www.google.com/patents/WO2012080713A1?cl=en"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TightPng">
            <summary>
            The Tight PNG encoding is a variant of the <see cref="F:RemoteViewing.Vnc.VncEncoding.Tight"/> encoding that disallows the
            BasicCompression type and replaces it with a new PngCompression type.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#tight-png-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.Fence">
            <summary>
            A client which requests the <see cref="F:RemoteViewing.Vnc.VncEncoding.Fence"/> pseudo-encoding is declaring that it supports and/or wishes to use
            the Fence extension.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#fence-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.ContinuousUpdates">
            <summary>
            A client which requests the <see langword="ContinuousUpdates"/> pseudo-encoding is declaring that it wishes to use the
            EnableContinuousUpdates extension.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#continuousupdates-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.CursorWithAlpha">
            <summary>
            A client which requests the <see cref="F:RemoteViewing.Vnc.VncEncoding.CursorWithAlpha"/> psuedo-encoding is declaring that it wishes
            to use the CursorWithAlpha extension.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.PseudoCursor">
            <summary>
            A client which requests the <see cref="F:RemoteViewing.Vnc.VncEncoding.PseudoCursor"/> pseudo-encoding is declaring that it is capable of
            drawing a mouse cursor locally. This can significantly improve perceived performance
            over slow links
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.PseudoDesktopSize">
            <summary>
            A client which requests the <see cref="F:RemoteViewing.Vnc.VncEncoding.PseudoDesktopSize"/> pseudo-encoding is declaring that it is capable
            of coping with a change in the framebuffer width and/or height.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.XCursor">
            <summary>
            A client which requests the X Cursor pseudo-encoding is declaring that it is capable
            of drawing a mouse cursor locally.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#x-cursor-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.RichCursor">
            <summary>
            A client which requests the Cursor pseudo-encoding is declaring that it is capable
            of drawing a mouse cursor locally.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#cursor-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.PointerPox">
            <summary>
            A TightVnc-specific extension.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.LastRect">
            <summary>
            A client which requests the LastRect pseudo-encoding is declaring that it does not need
            the exact number of rectangles in a FramebufferUpdate message. Instead, it will stop parsing
            when it reaches a LastRect rectangle.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#lastrect-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.DesktopSize">
            <summary>
            A client which requests the DesktopSize pseudo-encoding is declaring that it is capable of
            coping with a change in the framebuffer width and/or height.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#desktopsize-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TightCompressionLevel9">
            <summary>
            Specifies the desired compression level, where level 9 is high compression and level 0
            is low compression.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TightCompressionLevel8">
            <summary>
            Specifies the desired compression level, where level 9 is high compression and level 0
            is low compression.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#compression-level-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TightCompressionLevel7">
            <summary>
            Specifies the desired compression level, where level 9 is high compression and level 0
            is low compression.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#compression-level-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TightCompressionLevel6">
            <summary>
            Specifies the desired compression level, where level 9 is high compression and level 0
            is low compression.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#compression-level-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TightCompressionLevel5">
            <summary>
            Specifies the desired compression level, where level 9 is high compression and level 0
            is low compression.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#compression-level-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TightCompressionLevel4">
            <summary>
            Specifies the desired compression level, where level 9 is high compression and level 0
            is low compression.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#compression-level-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TightCompressionLevel3">
            <summary>
            Specifies the desired compression level, where level 9 is high compression and level 0
            is low compression.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#compression-level-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TightCompressionLevel2">
            <summary>
            Specifies the desired compression level, where level 9 is high compression and level 0
            is low compression.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#compression-level-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TightCompressionLevel1">
            <summary>
            Specifies the desired compression level, where level 9 is high compression and level 0
            is low compression.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#compression-level-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TightCompressionLevel0">
            <summary>
            Specifies the desired compression level, where level 9 is high compression and level 0
            is low compression.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#compression-level-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TightQualityLevel9">
            <summary>
            Specifies the desired quality from the JPEG encoder, where level 9 is high JPEG quality and
            level 0 is low JPEG quality.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#jpeg-quality-level-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TightQualityLevel8">
            <summary>
            Specifies the desired quality from the JPEG encoder, where level 9 is high JPEG quality and
            level 0 is low JPEG quality.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#jpeg-quality-level-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TightQualityLevel7">
            <summary>
            Specifies the desired quality from the JPEG encoder, where level 9 is high JPEG quality and
            level 0 is low JPEG quality.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#jpeg-quality-level-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TightQualityLevel6">
            <summary>
            Specifies the desired quality from the JPEG encoder, where level 9 is high JPEG quality and
            level 0 is low JPEG quality.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#jpeg-quality-level-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TightQualityLevel5">
            <summary>
            Specifies the desired quality from the JPEG encoder, where level 9 is high JPEG quality and
            level 0 is low JPEG quality.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#jpeg-quality-level-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TightQualityLevel4">
            <summary>
            Specifies the desired quality from the JPEG encoder, where level 9 is high JPEG quality and
            level 0 is low JPEG quality.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#jpeg-quality-level-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TightQualityLevel3">
            <summary>
            Specifies the desired quality from the JPEG encoder, where level 9 is high JPEG quality and
            level 0 is low JPEG quality.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#jpeg-quality-level-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TightQualityLevel2">
            <summary>
            Specifies the desired quality from the JPEG encoder, where level 9 is high JPEG quality and
            level 0 is low JPEG quality.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#jpeg-quality-level-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TightQualityLevel1">
            <summary>
            Specifies the desired quality from the JPEG encoder, where level 9 is high JPEG quality and
            level 0 is low JPEG quality.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#jpeg-quality-level-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.TightQualityLevel0">
            <summary>
            Specifies the desired quality from the JPEG encoder, where level 9 is high JPEG quality and
            level 0 is low JPEG quality.
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#jpeg-quality-level-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.VMWd">
            <summary>
            VMWare Cursor Data Pseudo-encoding
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.VMWe">
            <summary>
            VMWare Cursor State Pseudo-encoding
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.VMWf">
            <summary>
            VMWare Cursor Position Pseudo-encoding
            /// </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.VMWg">
            <summary>
            VMWare Keyboard typematic info Pseudo-encoding
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.VMWh">
            <summary>
            VMWare Keyboard LED state Pseudo-encoding
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.VMWi">
            <summary>
            VMWare Display Mode Change Pseudo-encoding
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.VMWj">
            <summary>
            VMWare Virtual Machine Errata State Pseudo-encoding
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.QemuPointerMotionChange">
            <summary>
            QEMU Pointer Motion Change Pseudo-encoding
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#qemu-pointer-motion-change-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.QemuExtendedKeyEvent">
            <summary>
            QEMU Extended Key Event Pseudo-encoding
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#qemu-extended-key-event-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.QemuAudio">
            <summary>
            QEMU Audio Pseudo-encoding
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#qemu-audio-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.LedState">
            <summary>
            LED State Pseudo-encoding
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#led-state-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.Gii">
            <summary>
            gii Pseudo-encoding
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#gii-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.DesktopName">
            <summary>
            DesktopName Pseudo-encoding
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#desktopname-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.ExtendedDesktopSize">
            <summary>
            ExtendedDesktopSize Pseudo-encoding
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#extendeddesktopsize-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.Xvp">
            <summary>
            xvp Pseudo-encoding
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#xvp-pseudo-encoding"/>
        </member>
        <member name="F:RemoteViewing.Vnc.VncEncoding.ContinuousUpdate">
            <summary>
            ContinuousUpdates Pseudo-encoding
            </summary>
            <seealso href="https://github.com/rfbproto/rfbproto/blob/master/rfbproto.rst#continuousupdates-pseudo-encoding"/>
        </member>
        <member name="T:RemoteViewing.Vnc.VncException">
            <summary>
            This exception is thrown when there is a problem with the VNC client-server communication.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.VncException"/> class.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncException.#ctor(System.String,RemoteViewing.Vnc.VncFailureReason,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.VncException"/> class, with a reason specified.
            </summary>
            <param name="message">The error message.</param>
            <param name="reason">The reason the exception was thrown.</param>
            <param name="innerException">The exception that caused this exception to be thrown, or <see langword="null"/>.</param>
        </member>
        <member name="P:RemoteViewing.Vnc.VncException.Reason">
            <summary>
            Gets the reason the exception was thrown.
            </summary>
        </member>
        <member name="T:RemoteViewing.Vnc.VncFailureReason">
            <summary>
            Possible reasons a <see cref="T:RemoteViewing.Vnc.VncException"/> is thrown.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncFailureReason.Unknown">
            <summary>
            Unknown reason.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncFailureReason.WrongKindOfServer">
            <summary>
            The server isn't a VNC server.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncFailureReason.UnsupportedProtocolVersion">
            <summary>
            RemoteViewing can't speak the protocol versions this server offers.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncFailureReason.ServerOfferedNoAuthenticationMethods">
            <summary>
            The server offered no authentication methods. This could mean that VNC is temporarily disabled.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncFailureReason.NoSupportedAuthenticationMethods">
            <summary>
            The server offered no supported authentication methods.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncFailureReason.PasswordRequired">
            <summary>
            A password was required to authenticate but wasn't supplied.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncFailureReason.AuthenticationFailed">
            <summary>
            Authentication failed. This could mean you supplied an incorrect password.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncFailureReason.UnsupportedPixelFormat">
            <summary>
            The server specified a pixel format RemoteViewing doesn't support.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncFailureReason.NetworkError">
            <summary>
            A network error occured. The connection may have been lost.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncFailureReason.SanityCheckFailed">
            <summary>
            The server sent a value that seems unreasonable. This shouldn't happen in normal conditions.
            </summary>
        </member>
        <member name="F:RemoteViewing.Vnc.VncFailureReason.UnrecognizedProtocolElement">
            <summary>
            The server sent an unrecognized protocol element. This shouldn't happen in normal conditions.
            </summary>
        </member>
        <member name="T:RemoteViewing.Vnc.VncFramebuffer">
            <summary>
            Stores pixel data for a VNC session.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncFramebuffer.#ctor(System.String,System.Int32,System.Int32,RemoteViewing.Vnc.VncPixelFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.VncFramebuffer"/> class.
            </summary>
            <param name="name">The framebuffer name. Many VNC clients set their titlebar to this name.</param>
            <param name="width">The framebuffer width.</param>
            <param name="height">The framebuffer height.</param>
            <param name="pixelFormat">The framebuffer pixel format.</param>
        </member>
        <member name="P:RemoteViewing.Vnc.VncFramebuffer.SupportsResizing">
            <inheritdoc/>
        </member>
        <member name="P:RemoteViewing.Vnc.VncFramebuffer.Name">
            <summary>
            Gets the framebuffer name. Many VNC clients set their titlebar to this name.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncFramebuffer.SyncRoot">
            <summary>
            Gets the framebuffer synchronization object.
            </summary>
            <remarks>
            Lock this before reading the framebuffer to avoid tearing artifacts.
            </remarks>
        </member>
        <member name="P:RemoteViewing.Vnc.VncFramebuffer.Width">
            <summary>
            Gets the framebuffer width.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncFramebuffer.Height">
            <summary>
            Gets the framebuffer height.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncFramebuffer.Stride">
            <summary>
            Gets the framebuffer stride. This is the number of bytes between one Y coordinate and the next.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncFramebuffer.PixelFormat">
            <summary>
            Gets the framebuffer pixel format.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncFramebuffer.GetBuffer">
            <summary>
            Returns the memory underlying this framebuffer.
            </summary>
            <returns>The framebuffer bytes.</returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncFramebuffer.SetPixel(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the color of a single pixel.
            </summary>
            <param name="x">The X coordinate of the pixel.</param>
            <param name="y">The Y coordinate of the pixel.</param>
            <param name="color">The RGB color of the pixel.</param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncFramebuffer.SetPixel(System.Int32,System.Int32,System.Byte[])">
            <summary>
            Sets the color of a single pixel.
            </summary>
            <param name="x">The X coordinate of the pixel.</param>
            <param name="y">The Y coordinate of the pixel.</param>
            <param name="color">
            The pixel color as a byte-encoded integer.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncFramebuffer.SetDesktopSize(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:RemoteViewing.Vnc.VncFramebuffer.RemoteViewing#Vnc#IVncFramebufferSource#Capture">
            <inheritdoc/>
        </member>
        <member name="T:RemoteViewing.Vnc.VncPasswordChallenge">
            <summary>
            Provides helper methods which implement the VNC password challenge protocol.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncPasswordChallenge.GenerateChallenge">
            <inheritdoc/>
        </member>
        <member name="M:RemoteViewing.Vnc.VncPasswordChallenge.GetChallengeResponse(System.Byte[],System.Char[],System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:RemoteViewing.Vnc.VncPasswordChallenge.GetChallengeResponse(System.Byte[],System.Byte[],System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:RemoteViewing.Vnc.VncPasswordChallenge.ReverseBits(System.Byte)">
            <summary>
            Reverses the bits of a <see cref="T:System.Byte"/>.
            </summary>
            <param name="value">
            The <see cref="T:System.Byte"/> for which to reverse the bits.
            </param>
            <returns>
            The <paramref name="value"/> with the bits reversed.
            </returns>
            <seealso href="http://www.vidarholen.net/contents/junk/vnc.html"/>
        </member>
        <member name="T:RemoteViewing.Vnc.VncPixelFormat">
            <summary>
            Describes the low-level arrangement of a framebuffer pixel.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncPixelFormat.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.VncPixelFormat"/> class.
            </summary>
            <param name="bitsPerPixel">The number of bits used to store a pixel. Currently, this must be 8, 16, or 32.</param>
            <param name="bitDepth">The bit depth of the pixel. Currently, this must be 24.</param>
            <param name="redBits">The number of bits used to represent red.</param>
            <param name="redShift">The number of bits left the red value is shifted.</param>
            <param name="greenBits">The number of bits used to represent green.</param>
            <param name="greenShift">The number of bits left the green value is shifted.</param>
            <param name="blueBits">The number of bits used to represent blue.</param>
            <param name="blueShift">The number of bits left the blue value is shifted.</param>
            <param name="isLittleEndian"><c>true</c> if the pixel is little-endian, or <c>false</c> if it is big-endian.</param>
            <param name="isPalettized"><c>true</c> if the framebuffer stores palette indices, or <c>false</c> if it stores colors.</param>
        </member>
        <member name="P:RemoteViewing.Vnc.VncPixelFormat.RGB32">
            <summary>
            Gets a <see cref="T:RemoteViewing.Vnc.VncPixelFormat"/> with 32bits per pixel, 8 bits of red, green and blue channels.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncPixelFormat.ARGB32">
            <summary>
            Gets a <see cref="T:RemoteViewing.Vnc.VncPixelFormat"/> with 32bits per pixel, 8 bits of red, green, blue and alpha channels.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncPixelFormat.RGB16">
            <summary>
            Gets a <see cref="T:RemoteViewing.Vnc.VncPixelFormat"/> with 16 bits per pixel with 5 bits of red, 6 bits of green and 5 bits of blue channels.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncPixelFormat.BitsPerPixel">
            <summary>
            Gets the number of bits used to store a pixel.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncPixelFormat.BytesPerPixel">
            <summary>
            Gets the number of bytes used to store a pixel.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncPixelFormat.BitDepth">
            <summary>
            Gets the bit depth of the pixel.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncPixelFormat.RedBits">
            <summary>
            Gets the number of bits used to represent red.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncPixelFormat.RedShift">
            <summary>
            Gets the number of bits left the red value is shifted.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncPixelFormat.GreenBits">
            <summary>
            Gets the number of bits used to represent green.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncPixelFormat.RedMax">
            <summary>
            Gets the maximum value of the red color.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncPixelFormat.BlueMax">
            <summary>
            Gets the maximum value of the blue color.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncPixelFormat.GreenMax">
            <summary>
            Gets the maximum value of the green color.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncPixelFormat.GreenShift">
            <summary>
            Gets the number of bits left the green value is shifted.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncPixelFormat.BlueBits">
            <summary>
            Gets the number of bits used to represent blue.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncPixelFormat.BlueShift">
            <summary>
            Gets the number of bits left the blue value is shifted.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncPixelFormat.IsLittleEndian">
            <summary>
            Gets a value indicating whether the pixel is little-endian.
            </summary>
            <value>
            <c>true</c> if the pixel is little-endian, or <c>false</c> if it is big-endian.
            </value>
        </member>
        <member name="P:RemoteViewing.Vnc.VncPixelFormat.IsPalettized">
            <summary>
            Gets a value indicating whether the framebuffer stores palette indices.
            </summary>
            <value>
            <c>true</c> if the framebuffer stores palette indices, or <c>false</c> if it stores colors.
            </value>
        </member>
        <member name="P:RemoteViewing.Vnc.VncPixelFormat.Size">
            <summary>
            Gets the size of a <see cref="T:RemoteViewing.Vnc.VncPixelFormat"/> when serialized to a <see cref="T:System.Byte"/> array.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncPixelFormat.Copy(System.Byte[],System.Int32,System.Int32,RemoteViewing.Vnc.VncPixelFormat,RemoteViewing.Vnc.VncRectangle,System.Byte[],System.Int32,System.Int32,RemoteViewing.Vnc.VncPixelFormat,System.Int32,System.Int32)">
             <summary>
             Copies pixels between two byte arrays. A format conversion is performed if necessary.
            
             Be sure to lock <see cref="P:RemoteViewing.Vnc.VncFramebuffer.SyncRoot"/> first to avoid tearing,
             if the connection is active.
             </summary>
             <param name="source">A pointer to the upper-left corner of the source.</param>
             <param name="sourceWidth">The width of the source image.</param>
             <param name="sourceStride">The offset in the source between one Y coordinate and the next.</param>
             <param name="sourceFormat">The source pixel format.</param>
             <param name="sourceRectangle">The rectangle in the source to decode.</param>
             <param name="target">A pointer to the upper-left corner of the target.</param>
             <param name="targetWidth">The width of the target image.</param>
             <param name="targetStride">The offset in the target between one Y coordinate and the next.</param>
             <param name="targetFormat">The target pixel format.</param>
             <param name="targetX">The X coordinate in the target that the leftmost pixel should be placed into.</param>
             <param name="targetY">The Y coordinate in the target that the topmost pixel should be placed into.</param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncPixelFormat.Copy(System.IntPtr,System.Int32,RemoteViewing.Vnc.VncPixelFormat,RemoteViewing.Vnc.VncRectangle,System.IntPtr,System.Int32,RemoteViewing.Vnc.VncPixelFormat,System.Int32,System.Int32)">
            <summary>
            <para>
            Copies pixels. A format conversion is performed if necessary.
            </para>
            <para>
            Be sure to lock <see cref="P:RemoteViewing.Vnc.VncFramebuffer.SyncRoot"/> first to avoid tearing,
            if the connection is active.
            </para>
            </summary>
            <param name="source">A pointer to the upper-left corner of the source.</param>
            <param name="sourceStride">The offset in the source between one Y coordinate and the next.</param>
            <param name="sourceFormat">The source pixel format.</param>
            <param name="sourceRectangle">The rectangle in the source to decode.</param>
            <param name="target">A pointer to the upper-left corner of the target.</param>
            <param name="targetStride">The offset in the target between one Y coordinate and the next.</param>
            <param name="targetFormat">The target pixel format.</param>
            <param name="targetX">The X coordinate in the target that the leftmost pixel should be placed into.</param>
            <param name="targetY">The Y coordinate in the target that the topmost pixel should be placed into.</param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncPixelFormat.CopyFromFramebuffer(RemoteViewing.Vnc.VncFramebuffer,RemoteViewing.Vnc.VncRectangle,System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies a region of the framebuffer into a bitmap.
            </summary>
            <param name="source">The framebuffer to read.</param>
            <param name="sourceRectangle">The framebuffer region to copy.</param>
            <param name="scan0">The bitmap buffer start address.</param>
            <param name="stride">The bitmap width stride.</param>
            <param name="targetX">The leftmost X coordinate of the bitmap to draw to.</param>
            <param name="targetY">The topmost Y coordinate of the bitmap to draw to.</param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncPixelFormat.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:RemoteViewing.Vnc.VncPixelFormat.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:RemoteViewing.Vnc.VncPixelFormat.ToString">
            <inheritdoc/>
        </member>
        <member name="M:RemoteViewing.Vnc.VncPixelFormat.Decode(System.Byte[],System.Int32)">
            <summary>
            Decodes a <see cref="T:RemoteViewing.Vnc.VncPixelFormat"/> from a <see cref="T:System.Byte"/> array.
            </summary>
            <param name="buffer">
            The <see cref="T:System.Byte"/> array which contains the <see cref="T:RemoteViewing.Vnc.VncPixelFormat"/> data.
            </param>
            <param name="offset">
            The first index in the <paramref name="buffer"/> which contains the <see cref="T:RemoteViewing.Vnc.VncPixelFormat"/>
            data.
            </param>
            <returns>
            A <see cref="T:RemoteViewing.Vnc.VncPixelFormat"/> object.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncPixelFormat.Encode(System.Byte[],System.Int32)">
            <summary>
            Serializes this <see cref="T:RemoteViewing.Vnc.VncPixelFormat"/> to a <see cref="T:System.Byte"/> array.
            </summary>
            <param name="buffer">
            The <see cref="T:System.Byte"/> array to which to encode the <see cref="T:RemoteViewing.Vnc.VncPixelFormat"/> object.
            </param>
            <param name="offset">
            The first <see cref="T:System.Byte"/> at which to store the <see cref="T:RemoteViewing.Vnc.VncPixelFormat"/> data.
            </param>
        </member>
        <member name="T:RemoteViewing.Vnc.VncRectangle">
            <summary>
            Bounds the changed pixels of a framebuffer.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncRectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.VncRectangle"/> structure.
            </summary>
            <param name="x">The X coordinate of the leftmost changed pixel.</param>
            <param name="y">The Y coordinate of the topmost changed pixel.</param>
            <param name="width">The width of the changed region.</param>
            <param name="height">The height of the changed region.</param>
        </member>
        <member name="P:RemoteViewing.Vnc.VncRectangle.Area">
            <summary>
            Gets the number of pixels.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncRectangle.X">
            <summary>
            Gets or sets the X coordinate of the leftmost changed pixel.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncRectangle.Y">
            <summary>
            Gets or sets the Y coordinate of the topmost changed pixel.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncRectangle.Width">
            <summary>
            Gets or sets the width of the changed region.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncRectangle.Height">
            <summary>
            Gets or sets the height of the changed region.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncRectangle.IsEmpty">
            <summary>
            Gets a value indicating whether the region is empty.
            </summary>
            <value>
            <c>true</c> if the region contains no pixels.
            </value>
        </member>
        <member name="M:RemoteViewing.Vnc.VncRectangle.op_Equality(RemoteViewing.Vnc.VncRectangle,RemoteViewing.Vnc.VncRectangle)">
            <summary>
            Compares two rectangles for equality.
            </summary>
            <param name="rect1">The first rectangle.</param>
            <param name="rect2">The second rectangle.</param>
            <returns><c>true</c> if the rectangles are equal.</returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncRectangle.op_Inequality(RemoteViewing.Vnc.VncRectangle,RemoteViewing.Vnc.VncRectangle)">
            <summary>
            Compares two rectangles for inequality.
            </summary>
            <param name="rect1">The first rectangle.</param>
            <param name="rect2">The second rectangle.</param>
            <returns><c>true</c> if the rectangles are not equal.</returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncRectangle.Intersect(RemoteViewing.Vnc.VncRectangle,RemoteViewing.Vnc.VncRectangle)">
            <summary>
            Intersects two rectangles.
            </summary>
            <param name="rect1">The first rectangle.</param>
            <param name="rect2">The second rectangle.</param>
            <returns>The intersection of the two.</returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncRectangle.Union(RemoteViewing.Vnc.VncRectangle,RemoteViewing.Vnc.VncRectangle)">
            <summary>
            Finds a region that contains both rectangles.
            </summary>
            <param name="rect1">The first rectangle.</param>
            <param name="rect2">The second rectangle.</param>
            <returns>The union of the two.</returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncRectangle.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:RemoteViewing.Vnc.VncRectangle.Equals(RemoteViewing.Vnc.VncRectangle)">
            <summary>
            Compares the rectangle with another rectangle for equality.
            </summary>
            <param name="other">The other rectangle.</param>
            <returns><c>true</c> if the rectangles are equal.</returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncRectangle.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:RemoteViewing.Vnc.VncRectangle.ToString">
            <inheritdoc />
        </member>
        <member name="T:RemoteViewing.Vnc.VncStream">
            <summary>
            Provides methods for reading and sending VNC data over a <see cref="P:RemoteViewing.Vnc.VncStream.Stream"/>.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.VncStream"/> class.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:RemoteViewing.Vnc.VncStream"/> class.
            </summary>
            <param name="stream">
            The underlying <see cref="P:RemoteViewing.Vnc.VncStream.Stream"/>.
            </param>
        </member>
        <member name="P:RemoteViewing.Vnc.VncStream.Stream">
            <summary>
            Gets or sets the underlying <see cref="P:RemoteViewing.Vnc.VncStream.Stream"/>.
            </summary>
        </member>
        <member name="P:RemoteViewing.Vnc.VncStream.SyncRoot">
            <summary>
            Gets an <see cref="T:System.Object"/> that can be used to synchronize access to the <see cref="T:RemoteViewing.Vnc.VncStream"/>.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.DecodeString(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Decodes a sequence of bytes from the specified <see cref="T:System.Byte"/> array into a <see cref="T:System.String"/>.
            </summary>
            <param name="buffer">
            The <see cref="T:System.Byte"/> array containing the sequence of bytes to decode.
            </param>
            <param name="offset">
            The index of the first byte to decode.
            </param>
            <param name="count">
            The number of bytes to decode.
            </param>
            <returns>
            A <see cref="T:System.String"/> containing the results of decoding the specified sequence of bytes.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.EncodeString(System.Char[],System.Int32,System.Int32)">
            <summary>
            Decodes a sequence of bytes from the specified <see cref="T:System.Char"/> array into a <see cref="T:System.String"/>.
            </summary>
            <param name="chars">
            The <see cref="T:System.Char"/> array containing the sequence of bytes to decode.
            </param>
            <param name="offset">
            The index of the first byte to decode.
            </param>
            <param name="count">
            The number of bytes to decode.
            </param>
            <returns>
            A <see cref="T:System.String"/> containing the results of decoding the specified sequence of bytes.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.EncodeString(System.String)">
            <summary>
            Encodes all the characters in the specified <see cref="T:System.String"/> into a sequence of bytes.
            </summary>
            <param name="string">
            The <see cref="T:System.String"/> to encode.
            </param>
            <returns>
            A <see cref="T:System.Byte"/> array containing the results of encoding the specified set of characters.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.Require(System.Boolean,System.String,RemoteViewing.Vnc.VncFailureReason)">
            <summary>
            Throws a <see cref="T:RemoteViewing.Vnc.VncException"/> if a specific condition is not met.
            </summary>
            <param name="condition">
            The condition which should be met.
            </param>
            <param name="message">
            A <see cref="T:System.String"/> that describes the error.
            </param>
            <param name="reason">
            A <see cref="T:RemoteViewing.Vnc.VncFailureReason"/> that describes the error.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.SanityCheck(System.Boolean)">
            <summary>
            Throws a <see cref="T:RemoteViewing.Vnc.VncException"/> if a specific condition is not met.
            </summary>
            <param name="condition">
            The condition which should be met.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.Close">
            <summary>
            Closes the current stream and releases any resources
            associated with the current stream.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.Receive(System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the
            stream by the number of bytes read.
            </summary>
            <param name="count">
            The number of bytes to read.
            </param>
            <returns>
            A <see cref="T:System.Byte"/> array containing the bytes that have been read.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.Receive(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the
            stream by the number of bytes read.
            </summary>
            <param name="buffer">
            An array of bytes. When this method returns, the buffer contains the specified byte array with
            the values between <paramref name="offset"/> and (<paramref name="offset"/> + <paramref name="count"/>- 1)
            replaced by the bytes read from the current source.
            </param>
            <param name="offset">
            The zero-based byte offset in <paramref name="buffer"/> at which to begin storing the data
            read from the current stream.
            </param>
            <param name="count">
            The maximum number of bytes to be read from the current stream.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.ReceiveByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte.
            </summary>
            <returns>
            The unsigned byte cast to an <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.ReceiveRectangle">
            <summary>
            Reads a <see cref="T:RemoteViewing.Vnc.VncRectangle"/> from the stream and advances the position within
            the stream by 8 bytes.
            </summary>
            <returns>
            The <see cref="T:RemoteViewing.Vnc.VncRectangle"/> which was read from the stream.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.ReceiveString(System.Int32)">
            <summary>
            Reads a <see cref="T:System.String"/> from the stream.
            </summary>
            <param name="maxLength">
            The maximum length of the <see cref="T:System.String"/> to
            read.
            </param>
            <returns>
            The <see cref="T:System.String"/> which was read from the stream.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.ReceiveUInt16BE">
            <summary>
            Reads a <see cref="T:System.UInt16"/> in big-endian encoding from the stream and advances the
            position within the stream by two bytes.
            </summary>
            <returns>
            The <see cref="T:System.UInt16"/> which was read from the stream.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.ReceiveUInt32BE">
            <summary>
            Reads a <see cref="T:System.UInt32"/> in big-endian encoding from the stream and advances the
            position within the stream by two bytes.
            </summary>
            <returns>
            The <see cref="T:System.UInt32"/> which was read from the stream.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.ReceiveVersion">
            <summary>
            Receives version information from the stream.
            </summary>
            <returns>
            The <see cref="T:System.Version"/>.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.Send(System.Byte[])">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this
            stream by the number of bytes written.
            </summary>
            <param name="buffer">
            The bytes to write to the stream.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.Send(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">
            An array of bytes. This method copies <paramref name="count"/> bytes from <paramref name="buffer"/> to the current stream.
            </param>
            <param name="offset">
            The zero-based byte offset in <paramref name="buffer"/> at which to begin copying bytes to the current stream.
            </param>
            <param name="count">
            The number of bytes to be written to the current stream.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.SendByte(System.Byte)">
            <summary>
            Writes a <see cref="T:System.Byte"/> to the current position in the stream and advances the position within the stream by one byte.
            </summary>
            <param name="value">
            The <see cref="T:System.Byte"/> to write to the stream.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.SendRectangle(RemoteViewing.Vnc.VncRectangle)">
            <summary>
            Writes a <see cref="T:RemoteViewing.Vnc.VncRectangle"/> to the current position in the stream and advances the position within the stream by 8 bytes.
            </summary>
            <param name="region">
            The <see cref="T:RemoteViewing.Vnc.VncRectangle"/> to write to the stream.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.SendUInt16BE(System.UInt16)">
            <summary>
            Writes a <see cref="T:System.UInt16"/> in big endian encoding to the current position in the stream and advances the position within the stream by two bytes.
            </summary>
            <param name="value">
            The <see cref="T:System.UInt16"/> to write to the stream.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.SendUInt32BE(System.UInt32)">
            <summary>
            Writes a <see cref="T:System.UInt32"/> in big endian encoding to the current position in the stream and advances the position within the stream by four bytes.
            </summary>
            <param name="value">
            The <see cref="T:System.UInt32"/> to write to the stream.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.SendString(System.String,System.Boolean)">
            <summary>
            Writes a <see cref="T:System.String"/> in big endian encoding to the current position in the stream.
            </summary>
            <param name="string">
            The <see cref="T:System.String"/> to write to the stream.
            </param>
            <param name="includeLength">
            <see langword="true"/> to write the current length to the stream; otherwise,
            <see langword="false"/>.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncStream.SendVersion(System.Version)">
            <summary>
            Writes a <see cref="T:System.Version"/> in big endian encoding to the current position in the stream.
            </summary>
            <param name="version">
            The <see cref="T:System.Version"/> to write to the stream.
            </param>
        </member>
        <member name="T:RemoteViewing.Vnc.VncUtility">
            <summary>
            Provides utility methods.
            </summary>
        </member>
        <member name="M:RemoteViewing.Vnc.VncUtility.AllocateScratch(System.Int32,System.Byte[]@)">
            <summary>
            Allocates a byte array of a given size.
            </summary>
            <param name="bytes">
            The minimum required length of the byte array.
            </param>
            <param name="scratch">
            A current byte array which can be re-used, if has enough size.
            </param>
            <returns>
            A byte array with at least <paramref name="bytes"/> of space.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncUtility.DecodeUInt16BE(System.Byte[],System.Int32)">
            <summary>
            Decodes a <see cref="T:System.UInt16"/> from a byte-array, in big-endian encoding.
            </summary>
            <param name="buffer">
            A <see cref="T:System.Byte"/> array which contains the <see cref="T:System.UInt16"/>.
            </param>
            <param name="offset">
            The index in <paramref name="buffer"/> at which the <see cref="T:System.UInt16"/> starts.
            </param>
            <returns>
            The requested <see cref="T:System.UInt16"/>.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncUtility.EncodeUInt16BE(System.UInt16)">
            <summary>
            Encodes a <see cref="T:System.UInt16"/> as a <see cref="T:System.Byte"/> array in big-endian
            encoding.
            </summary>
            <param name="value">
            The <see cref="T:System.UInt16"/> to encode.
            </param>
            <returns>
            A <see cref="T:System.Byte"/> array which represents the <paramref name="value"/>.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncUtility.EncodeUInt16BE(System.Byte[],System.Int32,System.UInt16)">
            <summary>
            Encodes a <see cref="T:System.UInt16"/> as a <see cref="T:System.Byte"/> array in big-endian
            encoding.
            </summary>
            <param name="buffer">
            The <see cref="T:System.Byte"/> array in which to store the <paramref name="value"/>.
            </param>
            <param name="offset">
            The index of the first byte in <paramref name="buffer"/> at which the
            <paramref name="value"/> should be stored.
            </param>
            <param name="value">
            The <see cref="T:System.UInt16"/> to encode.
            </param>
        </member>
        <member name="M:RemoteViewing.Vnc.VncUtility.DecodeUInt32BE(System.Byte[],System.Int32)">
            <summary>
            Decodes a <see cref="T:System.UInt32"/> from a byte-array, in big-endian encoding.
            </summary>
            <param name="buffer">
            A <see cref="T:System.Byte"/> array which contains the <see cref="T:System.UInt32"/>.
            </param>
            <param name="offset">
            The index in <paramref name="buffer"/> at which the <see cref="T:System.UInt32"/> starts.
            </param>
            <returns>
            The requested <see cref="T:System.UInt32"/>.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncUtility.EncodeUInt32BE(System.UInt32)">
            <summary>
            Encodes a <see cref="T:System.UInt32"/> as a <see cref="T:System.Byte"/> array in big-endian
            encoding.
            </summary>
            <param name="value">
            The <see cref="T:System.UInt32"/> to encode.
            </param>
            <returns>
            A <see cref="T:System.Byte"/> array which represents the <paramref name="value"/>.
            </returns>
        </member>
        <member name="M:RemoteViewing.Vnc.VncUtility.EncodeUInt32BE(System.Byte[],System.Int32,System.UInt32)">
            <summary>
            Encodes a <see cref="T:System.UInt32"/> as a <see cref="T:System.Byte"/> array in big-endian
            encoding.
            </summary>
            <param name="buffer">
            The <see cref="T:System.Byte"/> array in which to store the <paramref name="value"/>.
            </param>
            <param name="offset">
            The index of the first byte in <paramref name="buffer"/> at which the
            <paramref name="value"/> should be stored.
            </param>
            <param name="value">
            The <see cref="T:System.UInt32"/> to encode.
            </param>
        </member>
    </members>
</doc>
