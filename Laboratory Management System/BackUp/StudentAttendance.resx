<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABJdJREFUaEPtWU2MFEUYnVWMBwQjBzmDGsLudA9mCVzEDZGF7p6AB8WTXDDeDCAc
        OJCwMSZw8CchgYN6MOHvMF09wUQ0nryIRjDBBFaJPzHiwUSjCeJBgez63tdfj727NTvdO7OpPuxLXra3
        uur1++rn6+qa2hKWsAQ38He21viR2eOHyet+aE55oTnhReaIH7SfqtWmh7RadVEPk3EE8IUfJdNdGSaX
        hre3VmmT6sELk+MIYspqfg7NTfDdehD72rwaqIfmFbvh+YnpdtcP4r0q4xZe88NHYOiWzWgRMpjGjnhE
        5dyhEcUv2gyWo3lP5dwBRs7NNVaaN1TOHZBav7QYK0UkinuPBx89qJJuABPf2cyV5bpdF1aopBtgfv9g
        M1aa46eXq6Qb4M39udVYCTLrqZw7YI20bebKEBpXVc4dsEZes5krR3NS5dyhESVNu7nixLvoBZVzB2wx
        nrSZK8N6GG9UOXfwouQTm7kyxBr5WOXcAYFct5krQwRyTeXcAd8X523myhAJ44zKuYMXxM8g6xT8DrHR
        TDUis1Xl3MJvmh12k73ZCOLtKlMNYIr9aDPag99r8+oAi/5Ni9F5yTbavDoYCdqPYVT+tRm2kV+GG5rm
        CW1eLcjxj8W0jUi5b2izKmJ6CNNl0mZ8BsPk5927W/dro2oCPd3zi5EfY1q9usDcv2wznyfq/KTVOxgd
        fecBL0iex3vlLEbsW4zs36h7m9cs4z3W0eqLj0JTKzK/aHWBF7WfLfLJzDqsq80WD9KrUfKbzcQsnpMG
        ExP3wdzxrBxtr6PnD/Cci5++JK9R/ur/HWSmcH2MbUVjMYCHTGSmupHTanRb62HW7wSBtM3TyvkSAO+h
        7j4EcSfVQTCDBg+lYeZ99lZmuDvNHrbhFJH6CMJrmm0iVAA8KE+Dwcg0k11a3B/qOz9YDcGjEC4ynWQ0
        xsY+XSZTUNcER0LlCgOZcb/oQaOvBOA14y0I4Cz4T95oT4bmbWkv2SldEwt5n7AzoPWNaEBLi4tiegiN
        nwO/nmGuHAMqpZ0gJg6IdAHwxyOMxFUE/5n8H5qDolHmW8aP4s19BiDEWlib6iU3+P+GoDUsD+gBzoBs
        +vKFyzK/mdRVt9i5sRe2X+YGTxv1Rz1NRKf8xf/zx6TsaZRd8ceTR7VIwN9PmBBU4+Km4MxKlrOtlEFL
        Ks4HHtMwO6hI38xM2AJB2VcsQ49fYzBcOwiu82mA67fy66lwIGlKNX9mQoPgSNReT21cy9TK/8BD8xIE
        yvXvRV6no2Fe0modFJ5ayNGHteLAWA9MRO3OYscbWx6myAcj90PzO6b103p7BtDJh9I6PRY7euJSJjg4
        pkejufQ7OTv9Mhjcu4IALmfJYTbS9MvNJDR6pV9U+iN9+AAZJr/SeP6FCO7TRxYGR5Jt+34hDgLZFgWm
        7nDbocU9wVMXtpG2g9qi9AsYOiY9C2NYD/s5ZfTWHPAeRyINQtoMftO4YHAbL8GkKR7Xk1jEB5mRhsda
        D5GSnbiwdUuio7i42/iFglMkt2a6knUqM526QRKAZLP0UxfGbwsxEkyxvGdf2LXaf5xk3oH1LFzYAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>